<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lucas dos Santos Abreu</title>
    <link>http://www.lucassabreu.net.br/index.xml</link>
    <description>Recent content on Lucas dos Santos Abreu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <lastBuildDate>Sun, 07 May 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.lucassabreu.net.br/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ambientes por Branch com OpenShift Next Gen usando¬†GitHub</title>
      <link>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen-usando-github/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen-usando-github/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;&lt;i&gt;Esta postagem √© uma continua√ß√£o da &lt;a href=&#34;http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen&#34;&gt;&lt;strong&gt;Ambientes por Branch com OpenShift Next Gen&lt;/strong&gt;&lt;/a&gt;, a introdu√ß√£o do problema esta l√° e tamb√©m mostro como implementar o processo de deploy usando o GitLab nele, se n√£o viu da uma conferida, vale o investimento* üòâ.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Como prometi na outra postagem, vamos criar um processo de deploy de ambientes por branch usando o &lt;a href=&#34;https://medium.com/@github&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No caso do GitHub, ele cobre &amp;ldquo;apenas&amp;rdquo; a parte de reposit√≥rio de fontes, ele em si n√£o tem integra√ß√£o direta com o Kubernetes/OpenShift, mas possui uma grande gama de op√ß√µes no que diz respeito de ferramentas de CI e CD.&lt;/p&gt;

&lt;p&gt;A implementa√ß√£o que vou demonstrar usar√° o &lt;a href=&#34;https://medium.com/@BuddyWorks&#34;&gt;Buddy&lt;/a&gt;, mas pode ser replicada para qualquer outro CI, com dificuldade semelhante. Para o registro de imagens irei usar o &lt;a href=&#34;http://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; e novamente o OpenShift da &lt;a href=&#34;https://medium.com/@getupcloud&#34;&gt;Getup Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sobre uma introdu√ß√£o ao Kubernetes/OpenShift pode ver aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/&#34;&gt;&lt;strong&gt;Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää‚Äî‚ÄäParte 1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O cliente de linha de comando do OpenShift pode ser baixado em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/openshift/origin/releases&#34;&gt;&lt;strong&gt;openshift/origin&lt;/strong&gt; origin - Enterprise Kubernetes for Developers&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;O que queremos montar √© um ambiente por branch/PR que deve ser facilmente criado e destru√≠do. Para demonstrar criei um reposit√≥rio no GitHub com uma aplica√ß√£o bem simples que apenas retorna uma p√°gina est√°tica, mas √© o suficiente para o objetivo.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/helloworld.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;retorno do servi√ßo helloworld&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;E configurei o Buddy para construir uma imagem com base nesse reposit√≥rio e publicar ela como &lt;a href=&#34;https://hub.docker.com/r/lucassabreu/k8s-pr-envs/&#34;&gt;lucassabreu/k8s-pr-envs&lt;/a&gt; no Docker Hub.&lt;/p&gt;

&lt;p&gt;Nesse momento o arquivo &lt;code&gt;buddy.yml&lt;/code&gt; esta assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Docker&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;image&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;DOCKERFILE&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;login&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_USER}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_PASSWORD}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;dockerfile_path&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Dockerfile&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;repository&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;buddy.yml&lt;/p&gt;

&lt;p&gt;O fonte nesse momento pode ser visto em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v1&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v1&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Nesse primeiro momento n√£o possu√≠mos nenhum processo de deploy, seja de teste, produ√ß√£o ou por branch.&lt;/p&gt;

&lt;p&gt;Ent√£o vamos adicionar um processo de deploy no OpenShift para o ambiente de produ√ß√£o e testes, sendo que o ambiente de testes √© atualizado automaticamente para os commits na master e o de produ√ß√£o apenas quando um usu√°rio disparar o deploy via interface web do Buddy (&lt;a href=&#34;http://app.buddy.works/&#34;&gt;http://app.buddy.works/&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Precisamos preparar o OpenShift para montar esse processo, primeiramente criamos um &lt;strong&gt;Namespace&lt;/strong&gt;. A forma como criamos um varia de vendor para vendor, no caso do OpenShift da &lt;a href=&#34;https://medium.com/@getupcloud&#34;&gt;Getup Cloud&lt;/a&gt;, basta ir em &lt;a href=&#34;https://portal.getupcloud.com/projects&#34;&gt;https://portal.getupcloud.com/projects&lt;/a&gt; e criar um novo projeto, o nome do projeto ser√° o &lt;strong&gt;Namespace.&lt;/strong&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/getup-dashboard.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Tendo um &lt;strong&gt;Namespace&lt;/strong&gt; precisamos de uma forma do Buddy se autenticar contra o OpenShift, para isso podemos criar um ServiceAccount e usar o &lt;strong&gt;Token&lt;/strong&gt; do mesmo para isso. O script abaixo mostra como criar uma ServiceAccount e resgatar o &lt;strong&gt;Token&lt;/strong&gt; usando o CLI do OpenShift:&lt;/p&gt;

&lt;pre&gt;
&lt;b&gt;$ oc login https://api.getupcloud.com:443&lt;/b&gt;
Authentication required for https://api.getupcloud.com:443 ...
Username: lucas.s.abreu@gmail.com
Password:
Login successful.
...

&lt;b&gt;$ oc project github-k8s-pr-envs #usar o seu projeto&lt;/b&gt;
Now using project &#34;github-k8s-pr-envs&#34; on server ...

&lt;b&gt;$ oc create serviceaccount github&lt;/b&gt;
serviceaccount &#34;github&#34; created

&lt;b&gt;$ oc policy add-role-to-user admin \
    system:serviceaccount:github-k8s-pr-envs:github&lt;/b&gt;

&lt;b&gt;$ oc describe serviceaccount github&lt;/b&gt;
Name:  github
Namespace: github-k8s-pr-envs
Labels:  &lt;none&gt;

Image pull secrets: github-dockercfg-vat7r

Mountable secrets:  github-token-d3u3t
                    github-dockercfg-vat7r

Tokens:             github-token-2pimz
                    github-token-d3u3t

&lt;b&gt;$ oc describe secret github-token-d3u3t&lt;/b&gt;
Name:  github-token-d3u3t
Namespace: github-k8s-pr-envs
Labels:  &lt;none&gt;
Annotations: kubernetes.io/service-account.name=github
  kubernetes.io/service-account.uid=zzz

Type: kubernetes.io/service-account-token

Data
====
ca.crt:  1066 bytes
namespace: 18 bytes
service-ca.crt: 2182 bytes
token:  &lt;i&gt;token-do-openshift-que-estou-ocultando&lt;/i&gt;
&lt;/pre&gt;

&lt;p&gt;Agora podemos informar no Buddy algumas vari√°veis para ele disponibilizar para n√≥s depois. Meu painel ficou como abaixo:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/buddy-envs.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;buddy environments&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;A URL da API e o dom√≠nio que o OpenShift ir√° utilizar tamb√©m dependem do seu vendor, no meu caso a API est√° em &lt;code&gt;https://api.getupcould.com:443&lt;/code&gt; e o dom√≠nio base √© &lt;code&gt;getup.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora podemos criar os novos pipelines no Buddy. No &lt;code&gt;buddy.yml&lt;/code&gt; as linhas abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Staging&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Master&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Staging&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=staging&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Production&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;MANUAL&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Master&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Production&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=production&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;buddy.yml (v2)&lt;/p&gt;

&lt;p&gt;Basicamente criei duas novas pipelines, uma chamada &lt;code&gt;Deploy Staging&lt;/code&gt; e outra &lt;code&gt;Deploy Production&lt;/code&gt; as √∫nicas diferen√ßas entre elas √© que a &lt;code&gt;Deploy Staging&lt;/code&gt; √© autom√°tica para todo o commit na master e usa &lt;code&gt;ENV=staging&lt;/code&gt; para indicar o ambiente; e &lt;code&gt;Deploy Production&lt;/code&gt; √© manual e usa &lt;code&gt;ENV=production&lt;/code&gt;. Tamb√©m criei vari√°veis para injetar os valores que informamos antes no Buddy e uma extra &lt;code&gt;COMMIT&lt;/code&gt; para que ele consiga identificar qual imagem deve usar.&lt;/p&gt;

&lt;p&gt;Essas duas pipelines basicamente chamam o script abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Connecting to OpenShift...&amp;quot;&lt;/span&gt;
oc login &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_API_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; --token &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
oc project &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Removing old application...&amp;quot;&lt;/span&gt;
oc delete all -l &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;app=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_DOMAIN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;.&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_DOMAIN&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Deploying application...&amp;quot;&lt;/span&gt;
sed &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__ENV__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__IMAGE_TAG__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__HOSTNAME__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    &amp;quot;&lt;/span&gt; k8s/full.yml &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; oc apply -f -

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Enviroment &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployed to: http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/deploy&lt;/p&gt;

&lt;p&gt;Este script basicamente se autentica contra a API do OpenShift usando o Token que criamos antes, destr√≥i a aplica√ß√£o antiga e executa o deploy
de uma nova.&lt;/p&gt;

&lt;p&gt;Para poder identificar quais os componentes de cada ambiente estou marcando eles com a label &lt;code&gt;app=$ENV&lt;/code&gt;, dessa forma todos os componentes do ambiente &lt;code&gt;staging&lt;/code&gt; est√£o marcados com &lt;code&gt;app=staging&lt;/code&gt; e fica f√°cil elimin√°-los e identific√°-los.&lt;/p&gt;

&lt;p&gt;√â importante ressaltar que estou usando uma imagem customizada para rodar esses comandos (&lt;code&gt;lucassabreu/openshift-k8s-cli&lt;/code&gt;) que basicamente √© um &lt;code&gt;ubuntu&lt;/code&gt; com o &lt;code&gt;oc&lt;/code&gt; instalado dentro dela.&lt;/p&gt;

&lt;p&gt;Tamb√©m estou usando um truque de &amp;ldquo;&lt;em&gt;templating&lt;/em&gt;&amp;rdquo; com o YAML que define os ambientes para poder inserir as vari√°veis de cada ambiente nele. Existem outras ferramentas mais avan√ßadas como o &lt;a href=&#34;https://github.com/kubernetes/helm&#34;&gt;Helm&lt;/a&gt;, mas para o meu exemplo templating com &lt;code&gt;sed&lt;/code&gt; √© o suficiente.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-dpl-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-container&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__IMAGE_TAG__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Always&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;web-port&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;targetPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;web-port&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Route&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__HOSTNAME__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/full.yml&lt;/p&gt;

&lt;p&gt;Agora toda vez que √© feito commit na master o ambiente de &lt;em&gt;staging&lt;/em&gt; √© automaticamente atualizado, e ficou bem simples atualizar o ambiente &lt;em&gt;production&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Fonte at√© agora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v2&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v2&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Agora que temos um processo de &lt;em&gt;build&lt;/em&gt; e um de &lt;em&gt;deploy automatizado&lt;/em&gt;, vamos adicionar a fun√ß√£o de deploy por branch.&lt;/p&gt;

&lt;p&gt;Basicamente precisamos de duas novas etapas no nosso CI, uma para subir o ambiente para uma branch e outro para destruir esse ambiente.&lt;/p&gt;

&lt;p&gt;Primeiro vamos preparar o deploy por branch, para isso adicionei as seguintes linhas do &lt;code&gt;buddy.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Review&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;((?!master).*)&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Docker&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;image&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;DOCKERFILE&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;login&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_USER}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_PASSWORD}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;dockerfile_path&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Dockerfile&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;repository&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;By&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Branch&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;GITHUB_TOKEN=&amp;quot;${GITHUB_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;LOG_URL=&amp;quot;${execution.html_url}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No novo pipeline &lt;em&gt;Review&lt;/em&gt; temos um &lt;em&gt;build&lt;/em&gt; da imagem e um deploy de um ambiente para a branch em quest√£o, para uma rota pr√≥pria.&lt;/p&gt;

&lt;p&gt;Eu acabei juntando essas duas a√ß√µes, pois o build que roda na master vai versionando as imagens por commit, que √© uma pr√°tica comum e que ajudaria a fazer o deploy para produ√ß√£o mais simples, por√©m branchs de desenvolvimento tendem a ser mais ca√≥ticas e iriam poluir muito o registro de imagens (se usar o do AWS seria um custo maior tamb√©m), ent√£o preferi manter uma imagem por branch, at√© para n√£o confundir tamb√©m.&lt;/p&gt;

&lt;p&gt;Se eu criar uma nova branch nesse momento, o Buddy automaticamente ir√° montar uma imagem para ela e inseri-la no OpenShift, se o nome da branch for &lt;code&gt;a-change&lt;/code&gt; o nome do ambiente &lt;a href=&#34;http://github-k8s-pr-envs-a-change.getup.io&#34;&gt;http://github-k8s-pr-envs-a-change.getup.io&lt;/a&gt; (talvez ainda esteja acess√≠vel).&lt;/p&gt;

&lt;p&gt;Eu sei disso porque eu escrevi o script, eu poderia documentar isso no projeto para todos saberem como descobrir as URLs corretas, mas √© mais do que natural esperar erros por esse caminho, um &amp;ldquo;o&amp;rdquo; que vira &amp;ldquo;a&amp;rdquo; na hora de digitar, um nome de branch estranho, etc.&lt;/p&gt;

&lt;p&gt;Dessa forma fica dif√≠cil para a equipe de QA acessar aos ambientes por branch toda a vez correndo o risco de errar. Ent√£o fiz algumas altera√ß√µes no &lt;code&gt;k8s/deploy&lt;/code&gt; para utilizar a &lt;a href=&#34;https://developer.github.com/v3/repos/deployments/&#34;&gt;API de Deployments do GitHub&lt;/a&gt; para registrar as URLs diretamente nos commits.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; ! -z &lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;staging&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Registering &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployment...&amp;quot;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;ID_DEPLOYMENT&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; create &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;.id&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;RETURN&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; status &lt;span style=&#34;color: #f8f8f2&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ID_DEPLOYMENT&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; success &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$LOG_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$RETURN&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;.message&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;null&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$RETURN&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Enviroment &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployed to: http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;deploy.sh&lt;/p&gt;

&lt;p&gt;Com isso fa√ßo algumas chamadas a API do GitHub usando o &lt;code&gt;k8s/github-deployment&lt;/code&gt; (que √© basicamente um facilitador para a API) e consigo registrar o deploy no GitHub.&lt;/p&gt;

&lt;p&gt;O Pull Request da branch &lt;code&gt;a-change&lt;/code&gt; fica assim:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/github-deployments.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Nesse bot√£o &amp;ldquo;View deployment&amp;rdquo; est√° o link para a rota que criamos no deploy, e dessa forma fica extremamente f√°cil para a equipe de QA acessar os ambientes.&lt;/p&gt;

&lt;p&gt;Fontes at√© agora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v3.1&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v3.1&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ainda fica faltando uma √∫ltima atividade por realizar, que √© destruir o ambiente da branch quando os Testers n√£o mais precisarem deles.&lt;/p&gt;

&lt;p&gt;Ent√£o vamos adicionar uma nova pipeline no &lt;code&gt;buddy.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Close&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Review&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;MANUAL&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;((?!master).*)&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Destroy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Branch&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Environment&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;GITHUB_TOKEN=&amp;quot;${GITHUB_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/destroy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nesse pipeline manual basicamente chamamos o script &lt;code&gt;k8s/destroy&lt;/code&gt; (que esta abaixo) que simplesmente destr√≥i o ambiente inativa ele no GitHub.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Connecting to OpenShift...&amp;quot;&lt;/span&gt;
oc login &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_API_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; --token &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
oc project &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Removing old application...&amp;quot;&lt;/span&gt;
oc delete all -l &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;app=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; inactive &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Agora podemos chamar ele para eliminar os ambientes de branch em aberto.&lt;/p&gt;

&lt;p&gt;Fontes at√© o momento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v4&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v4&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Um comportamento que ainda n√£o conseguimos reproduzir usando o Buddy e GitHub √© destruir os ambientes quando o Pull Request √© finalizado.&lt;/p&gt;

&lt;p&gt;Para resolver esse problema podemos adicionar um webhook no GitHub e dispararmos o pipeline atrav√©s desse webhook. Isso pode ser feito de v√°rias formas, usando Lambda Functions ou um endpoint para esse fim.&lt;/p&gt;

&lt;p&gt;No caso criei um novo Pod com um cont√™iner que criei (&lt;code&gt;lucassabreu/buddy-works-pullrequest-webhook&lt;/code&gt;) e associei ela no meu projeto no GitHub.&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/webhooks.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;E pronto tenho um processo completo, mesmo que se esque√ßam de derrubar o ambiente no momento que o merge acontecer automaticamente o ambiente
ser√° destru√≠do.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Abaixo esta o meu &amp;ldquo;webhook&amp;rdquo; caso opte por um caminho semelhante e poder
ter uma base de como √© a chamada.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/buddy-works-pullrequest-webhook&#34;&gt;&lt;strong&gt;lucassabreu/buddy-works-pullrequest-webhook&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Foi mais complexo implementar a integra√ß√£o do OpenShift com o GitHub, mas ainda sim temos um grande ecossistema de integra√ß√µes que nos permitem contornar essa quest√£o, e o resultado continua sendo o esperado.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ambientes por Branch com OpenShift Next¬†Gen</title>
      <link>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Hoje na &lt;a href=&#34;https://blog.coderockr.com&#34;&gt;Coderockr&lt;/a&gt; utilizamos &lt;a href=&#34;https://blog.coderockr.com/a-import%C3%A2ncia-da-revis%C3%A3o-de-c%C3%B3digo-a1a8b41ed7ff&#34;&gt;Pull Requests e Code Reviews&lt;/a&gt; como uma ferramenta de qualidade nos nossos desenvolvimentos, e tem garantido resultados nesse sentido.&lt;/p&gt;

&lt;p&gt;Mas mesmo com esse processo eventualmente temos de lidar com alguns problemas como, por exemplo, fun√ß√µes que interferem umas nas outras depois de aprovadas, permitir que os Testers possam avaliar as melhorias, e garantir que todos as mudan√ßas feitas na branch principal podem ser enviadas para produ√ß√£o.&lt;/p&gt;

&lt;p&gt;Esses problemas podem ser reduzidos, ou at√© eliminados; se, mesmo antes de aprovar os PRs; os Testers conseguissem trabalhar sobre essas melhorias e s√≥ repassadas para a branch principal ap√≥s a aprova√ß√£o deles.&lt;/p&gt;

&lt;p&gt;Desse modo o fonte principal n√£o s√≥ passou pelo Review de outros desenvolvedores, como foi testado pela equipe de QA, dando ainda mais confian√ßa no mesmo.&lt;/p&gt;

&lt;p&gt;Mas subir ambientes de homologa√ß√£o para cada um dos PRs, automaticamente ou sobre demanda, n√£o √© um problema trivial, envolve subir m√°quinas, garantir que esta rodando a vers√£o atualizada, liberar portas, etc.&lt;/p&gt;

&lt;p&gt;Uma forma que encontramos para resolver esse problema √© utilizando um cluster Kubernetes (ou a vers√£o da Red Hat o OpenShift), pois essas a√ß√µes s√£o bem simples de realizar com ele e ainda mais f√°ceis se forem automatizadas.&lt;/p&gt;

&lt;p&gt;Agora vou explicar como montar um exemplo simples, um para o GitLab e outro para o GitHub, integrando com o OpenShift da &lt;a href=&#34;https://getupcloud.com.br&#34;&gt;Getup Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sobre uma introdu√ß√£o ao Kubernetes/OpenShift pode ver aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/&#34;&gt;&lt;strong&gt;Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää-‚ÄäParte 1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O cliente de linha de comando pode ser baixado em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/openshift/origin/releases&#34;&gt;&lt;strong&gt;openshift/origin&lt;/strong&gt; origin - Enterprise Kubernetes for Developers&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;gitlab-integrations-ci-registry-e-environments&#34;&gt;GitLab: Integrations, CI, Registry e Environments&lt;/h4&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/gitlab.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;A primeira experiencia que fizemos foi com o &lt;a href=&#34;https://gitlab.com&#34;&gt;GitLab&lt;/a&gt;, principalmente pela integra√ß√£o que ele traz com o Kubernetes, e as outras ferramentas que ele oferece que acabaram cobrindo todo o escopo do problema.&lt;/p&gt;

&lt;p&gt;O que queremos montar √© um ambiente por branch/PR que deve ser facilmente criado e destru√≠do. Para demonstrar criei um reposit√≥rio no GitLab com uma aplica√ß√£o bem simples que apenas retorna uma p√°gina est√°tica, mas √© o suficiente para o objetivo.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/helloworld-view.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;retorno do servi√ßo helloworld&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Primeiramente criei a base da aplica√ß√£o usando Docker, a mesma gera uma p√°gina com o conte√∫do acima. O que vale destacar nesse primeiro momento √© que j√° configurei um processo de CI simples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;services&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker:dind&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker login -u &amp;quot;gitlab-ci-token&amp;quot; -p &amp;quot;$CI_JOB_TOKEN&amp;quot; $CI_REGISTRY&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker build --pull -t &amp;quot;$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot; .&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker push &amp;quot;$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;echo &amp;quot;Pushing image $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;branches&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;.gitlab-ci.yml&lt;/p&gt;

&lt;p&gt;Nesse CI eu construo o cont√™iner da aplica√ß√£o para cada commit feito e guardo no registro do pr√≥prio GitLab por branch, dessa forma tenho uma vers√£o do meu cont√™iner para cada uma das branchs que forem criadas e vou atualizando essas vers√µes automaticamente a cada altera√ß√£o.&lt;/p&gt;

&lt;p&gt;Fonte completo at√© aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.com/lucassabreu/k8s-pr-envs/tree/v1&#34;&gt;&lt;strong&gt;Files ¬∑ v1 ¬∑ Lucas dos Santos Abreu / k8s-pr-envs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Nesse momento n√£o tenho nenhum deploy, seja de ambiente de teste, produ√ß√£o ou por branch.&lt;/p&gt;

&lt;p&gt;Ent√£o vamos adicionar um processo de deploy no OpenShift para o ambiente de produ√ß√£o e testes, sendo que o ambiente de testes √© atualizado automaticamente para os commits na master e o de produ√ß√£o apenas quando um usu√°rio disparar o deploy.&lt;/p&gt;

&lt;p&gt;Para fazer isso primeiramente temos de configurar a integra√ß√£o entre o OpenShift e o GitLab, para isso vamos em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Integrations&lt;/em&gt; e procuramos &lt;em&gt;Kubernetes&lt;/em&gt; nas op√ß√µes. O GitLab ir√° solicitar algumas informa√ß√µes sobre o ambiente, qual o &lt;strong&gt;Namespace&lt;/strong&gt;, o &lt;strong&gt;URL da API&lt;/strong&gt; do &lt;strong&gt;Kubernetes&lt;/strong&gt; e uma forma de autentica√ß√£o, que pode ser um &lt;strong&gt;Service Token&lt;/strong&gt; ou um &lt;strong&gt;CA Bundle&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dessa forma vou criar um novo &lt;strong&gt;Namespace&lt;/strong&gt;, como fazer isso vai depender do seu vendor de Kubernetes, no caso da &lt;a href=&#34;https://getupcloud.com.br&#34;&gt;Getup Cloud&lt;/a&gt;, basta ir em &lt;a href=&#34;https://portal.getupcloud.com/projects&#34;&gt;https://portal.getupcloud.com/projects&lt;/a&gt; e criar um novo projeto, o nome do projeto ser√° o &lt;strong&gt;Namespace.&lt;/strong&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/dashboard-getup.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Uma vez com o &lt;strong&gt;Namespace&lt;/strong&gt; podemos criar um novo &lt;strong&gt;Service Token&lt;/strong&gt; para ser usado no CI do GitLab, no caso para criar um Service Token √© necess√°rio criar uma ServiceAccount e dar permiss√µes a mesma, e ent√£o pegar o Service Token dela. O script abaixo realiza essas opera√ß√µes:&lt;/p&gt;

&lt;pre&gt;
&lt;b&gt;$ oc login https://api.getupcloud.com:443&lt;/b&gt;
Authentication required for https://api.getupcloud.com:443 ...
Username: lucas.s.abreu@gmail.com
Password:
Login successful.
...

&lt;b&gt;$ oc project gitlab-k8s-pr-envs #usar o seu projeto&lt;/b&gt;
Now using project &#34;gitlab-k8s-pr-envs&#34; on server ...

&lt;b&gt;$ oc create serviceaccount gitlab&lt;/b&gt;
serviceaccount &#34;gitlab&#34; created

&lt;b&gt;$ oc policy add-role-to-user admin \&lt;/b&gt;
    system:serviceaccount:gitlab-k8s-pr-envs:gitlab

&lt;b&gt;$ oc describe serviceaccount gitlab&lt;/b&gt;
Name:  gitlab
Namespace: gitlab-k8s-pr-envs
Labels:  &lt;none&gt;

Image pull secrets: gitlab-dockercfg-qj9o9

Mountable secrets:  gitlab-token-6ael2
                    gitlab-dockercfg-qj9o9

Tokens:             gitlab-token-6ael2
                    gitlab-token-zkk6u

&lt;b&gt;$ oc describe secret gitlab-token-6ael2&lt;/b&gt;
Name:  gitlab-token-6ael2
Namespace: gitlab-k8s-pr-envs
Labels:  &lt;none&gt;
Annotations: kubernetes.io/service-account.name=gitlab
  kubernetes.io/service-account.uid=zzz

Type: kubernetes.io/service-account-token

Data
====
ca.crt:  1066 bytes
namespace: 18 bytes
service-ca.crt: 2182 bytes
token:  &lt;i&gt;&lt;b&gt;token-do-openshift-que-estou-ocultando&lt;/i&gt;&lt;/b&gt;
&lt;/pre&gt;

&lt;p&gt;Agora que temos o token gerado basta adicionar essas informa√ß√µes no
GitLab.&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/gitlab-k8s-integration.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Voc√™ pode confirmar se passou os dados corretos com o bot√£o de teste no GitLab.&lt;/p&gt;

&lt;p&gt;Certo, agora o GitLab consegue conversar com o OpenShift. Podemos ent√£o alterar nossas regras de CI para criar duas novas etapas: &lt;em&gt;staging&lt;/em&gt; e &lt;em&gt;production&lt;/em&gt;, que ir√£o realizar o deploy dos nossos ambientes padr√µes, sendo que &lt;em&gt;staging&lt;/em&gt; ser√° disparada automaticamente por commits na master e &lt;em&gt;production&lt;/em&gt; ficar√° como manual.&lt;/p&gt;

&lt;p&gt;O¬†.&lt;code&gt;gitlab-ci.yml&lt;/code&gt; ficou como abaixo (j√° usando a integra√ß√£o com OpenShift):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;stages&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;staging&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;production&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;KUBE_DOMAIN&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;getup.io&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;services&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker:dind&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker login -u &amp;quot;gitlab-ci-token&amp;quot; -p &amp;quot;$CI_JOB_TOKEN&amp;quot; $CI_REGISTRY&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker build --pull -t &amp;quot;$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot; .&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;docker push &amp;quot;$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;echo &amp;quot;Pushing image $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;branches&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;staging&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;staging&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;lucassabreu/openshift-k8s-cli:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;CI_ENVIRONMENT_URL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME-staging.$KUBE_DOMAIN&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;staging&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME-staging.$KUBE_DOMAIN&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;k8s/deploy&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;production&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;production&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;lucassabreu/openshift-k8s-cli:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;CI_ENVIRONMENT_URL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME.$KUBE_DOMAIN&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;production&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME.$KUBE_DOMAIN&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;when&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;manual&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;k8s/deploy&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;.gitlab-ci.yml (v2)&lt;/p&gt;

&lt;p&gt;As mudan√ßa s√£o os novos stages &lt;code&gt;staging&lt;/code&gt; e &lt;code&gt;production&lt;/code&gt;; as vari√°veis novas &lt;code&gt;KUBE_DOMAIN&lt;/code&gt; e &lt;code&gt;CI_ENVIRONMENT_URL&lt;/code&gt;; e o script &lt;code&gt;k8s/deploy&lt;/code&gt;. Vamos por partes.&lt;/p&gt;

&lt;p&gt;A vari√°vel &lt;code&gt;KUBE_DOMAIN&lt;/code&gt; vai ajudar a deixar o nosso processo de deploy mais simples, basicamente n√≥s colocamos nela o dom√≠nio base que o OpenShift usa para expor as rotas dele, no caso da Getup seria &amp;ldquo;&lt;em&gt;getup.io&lt;/em&gt;&amp;rdquo;. A &lt;code&gt;CI_ENVIRONMENT_URL&lt;/code&gt; √© completar a &lt;code&gt;KUBE_DOMAIN&lt;/code&gt; e serve para informar o &lt;code&gt;k8s/deploy&lt;/code&gt; qual endere√ßo ele deve expor o ambiente, ele deve sempre terminar com o &lt;code&gt;KUBE_DOMAIN&lt;/code&gt; e deve ser igual a &lt;code&gt;url&lt;/code&gt; da chave &lt;code&gt;environment&lt;/code&gt;, pois √© por essa chave que o GitLab sabe onde os ambientes est√£o expostos.&lt;/p&gt;

&lt;p&gt;As etapas de &lt;code&gt;staging&lt;/code&gt; e &lt;code&gt;production&lt;/code&gt; ir√£o fazer o deploy dos nossos ambientes e como comentei antes o ambiente de &lt;em&gt;staging&lt;/em&gt; ter√° deploy autom√°tico para todo commit na master, enquanto &lt;em&gt;production&lt;/em&gt; ir√° esperar uma a√ß√£o do usu√°rio. No mais as duas etapas s√£o iguais mudando apenas a URL que est√£o sendo expostas. Estou usando a imagem &lt;code&gt;lucassabreu/openshift-k8s-cli&lt;/code&gt; que √© basicamente um &lt;code&gt;ubuntu&lt;/code&gt; com o &lt;code&gt;oc&lt;/code&gt; instalado.&lt;/p&gt;

&lt;p&gt;O script &lt;code&gt;k8s/deploy&lt;/code&gt; est√° abaixo e ele basicamente se autentica contra a API do OpenShift usando o &lt;em&gt;Service Token&lt;/em&gt; que criamos antes, destr√≥i a aplica√ß√£o antiga e executa o deploy de uma nova.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

oc login &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$KUBE_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; --token &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$KUBE_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
oc project &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$KUBE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_ENVIRONMENT_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #75715e&#34;&gt;# remove protocol from URL&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME/&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\h&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;ttp:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\/\/&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;}&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME/&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\h&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;ttp:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\/\/&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;}&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_REGISTRY_IMAGE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_BUILD_REF_NAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_ENVIRONMENT_SLUG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Deleting old application...&amp;quot;&lt;/span&gt;
oc delete all -l &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;app=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_ENVIRONMENT_SLUG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Deploying image &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; to env &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; at &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;...&amp;quot;&lt;/span&gt;

sed &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|__HOSTNAME__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|__ENV__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|__IMAGE_TAG__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  &amp;quot;&lt;/span&gt; k8s/full.yml &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; oc apply -f -
&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$?&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Deployed to &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$CI_ENVIRONMENT_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/deploy&lt;/p&gt;

&lt;p&gt;Vale ressaltar que √© importante marcar os componentes do ambiente com &lt;code&gt;app=$CI_ENVIRONMENT_SLUG&lt;/code&gt;, pois √© assim que o GitLab consegue encontrar eles e lhe retornar status sobre eles.&lt;/p&gt;

&lt;p&gt;Tamb√©m estou usando um truque de &amp;ldquo;templating&amp;rdquo; com o YAML que define os ambientes para poder inserir as vari√°veis de cada ambiente nele. Existem outras ferramentas mais avan√ßadas como o &lt;a href=&#34;https://github.com/kubernetes/helm&#34;&gt;Helm&lt;/a&gt;, mas para o meu exemplo templating com &lt;code&gt;sed&lt;/code&gt; √© o suficiente.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-dpl-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-container&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__IMAGE_TAG__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Always&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;web-port&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;targetPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;web-port&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Route&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__HOSTNAME__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/full.yml&lt;/p&gt;

&lt;p&gt;Agora, depois que do commit das altera√ß√µes, o GitLab faz o &lt;em&gt;build&lt;/em&gt;, o deploy da &lt;em&gt;staging&lt;/em&gt; e &lt;em&gt;production&lt;/em&gt; (manual); podemos ver na √°rea &lt;em&gt;Environments&lt;/em&gt; do GitLab que os ambientes est√£o rodando, ele inclusive traz alguns comandos para facilitar a vida: link para a URL do ambiente, terminal dentro do Pod e op√ß√£o de Re-deploy.&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/gilab-envs.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Fonte completo at√© agora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.com/lucassabreu/k8s-pr-envs/tree/v2&#34;&gt;&lt;strong&gt;Files ¬∑ v2 ¬∑ Lucas dos Santos Abreu / k8s-pr-envs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Agora que temos o &lt;em&gt;build&lt;/em&gt; da nossa aplica√ß√£o e um deploy automatizado, vamos adicionar a fun√ß√£o de deploy por branch.&lt;/p&gt;

&lt;p&gt;Basicamente precisamos de duas novas etapas no nosso CI, uma para subir o ambiente para uma branch e outro para destruir esse ambiente para evitar consumir recursos sem necessidade.&lt;/p&gt;

&lt;p&gt;Para isso fiz as seguintes altera√ß√µes nos¬†&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;stages&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;review&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;staging&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;production&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;cleanup&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;review&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;review&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;lucassabreu/openshift-k8s-cli:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;CI_ENVIRONMENT_URL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;r/$CI_COMMIT_REF_NAME&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;on_stop&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;stop_review&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;k8s/deploy&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;branches&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;except&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;stop_review&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;cleanup&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;lucassabreu/openshift-k8s-cli:latest&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;r/$CI_COMMIT_REF_NAME&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;stop&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;when&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;manual&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;GIT_STRATEGY&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;none&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;oc login &amp;quot;$KUBE_URL&amp;quot; --token &amp;quot;$KUBE_TOKEN&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;oc project &amp;quot;$KUBE_NAMESPACE&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;oc delete deployments -l &amp;quot;app=$CI_ENVIRONMENT_SLUG&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;oc delete all -l &amp;quot;app=$CI_ENVIRONMENT_SLUG&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;branches&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;except&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;.gitlab-ci.yml (v3)&lt;/p&gt;

&lt;p&gt;Basicamente adicionei as duas novas etapas, &lt;code&gt;review&lt;/code&gt; basicamente faz a mesma coisa que &lt;code&gt;staging&lt;/code&gt;, mas usa um nome de ambiente din√¢mico baseado na branch; e tem um &lt;code&gt;enviroment:on_stop&lt;/code&gt; que basicamente indica o que fazer quando a branch for removida.&lt;/p&gt;

&lt;p&gt;Na etapa &lt;code&gt;stop_review&lt;/code&gt; executo alguns comandos para eliminar o ambiente quando for chamada, √© importante deixar essa como &lt;code&gt;manual&lt;/code&gt; para que ela n√£o apague sozinha o ambiente quando terminar as outras etapas.&lt;/p&gt;

&lt;p&gt;Os comandos da etapa &lt;code&gt;stop_review&lt;/code&gt; precisam estar definidos diretamente no¬†&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, pois quando essa etapa for executada √© poss√≠vel que a branch e commits dela n√£o existam mais, √© tamb√©m por esse motivo que informamos a vari√°vel &lt;code&gt;GIT_STRATEGY&lt;/code&gt; como &lt;code&gt;NO&lt;/code&gt; evitando que sequer seja checado se a branch/commit de origem existem.&lt;/p&gt;

&lt;p&gt;Agora quando crio uma nova branch automaticamente √© criado um novo ambiente para a mesma no OpenShift.&lt;/p&gt;

&lt;p&gt;Para testar criei a branch &lt;code&gt;a-change&lt;/code&gt; e fiz a seguinte altera√ß√£o:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;   &amp;lt;img id=&amp;quot;logo&amp;quot; src=&amp;quot;logo.svg&amp;quot;
     alt=&amp;quot;CodeRocker&amp;quot; title=&amp;quot;CodeRocker&amp;quot; /&amp;gt;
   &amp;lt;h1&amp;gt;Hello World !&amp;lt;/h1&amp;gt;
&lt;span style=&#34;color: #a6e22e&#34;&gt;+  &amp;lt;h2&amp;gt;(with a change)&amp;lt;/h2&amp;gt;&lt;/span&gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;public/index.html (pr)&lt;/p&gt;

&lt;p&gt;Assim que dei o &lt;code&gt;git push&lt;/code&gt; come√ßou o deploy do novo ambiente &lt;code&gt;r/a-change&lt;/code&gt;, logo que terminou pude verificar na √°rea de ambientes do GitLab que estava rodando, e tem as mesmas opera√ß√µes dispon√≠veis que os outros, mais a op√ß√£o de parada (&lt;code&gt;stop_review&lt;/code&gt;):&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/branch-env.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;J√° rodando as altera√ß√µes:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen/a-change.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Fontes com essas altera√ß√µes em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.com/lucassabreu/k8s-pr-envs/tree/v3&#34;&gt;&lt;strong&gt;Files ¬∑ v3 ¬∑ Lucas dos Santos Abreu / k8s-pr-envs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ap√≥s essas altera√ß√µes podemos implementar a regra de merge apenas ap√≥s testes pela equipe de QA, sem interfer√™ncia de outras atividades que foram aplicadas no meio do caminho e permitindo um controle melhor sobre o que esta pronto para ir para a produ√ß√£o.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A postagem acabou ficando bem grande apenas para falar do processo no GitLab, por isso vou criar um segundo post sobre como fazer isso no GitHub, abaixo esta o link para ele:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen-usando-github&#34;&gt;&lt;strong&gt;Ambientes por Branch com OpenShift Next Gen usando GitHub&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää-‚ÄäParte¬†4</title>
      <link>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-4/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-4/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Este post √© a quarta parte de uma s√©rie sobre o b√°sico necess√°rio para usar o Kubernetes, caso voc√™ n√£o tenha lido o post anterior recomendo l√™-lo e depois voltar aqui para n√£o ficar perdido.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parte 1‚Ää-‚ÄäConceitos B√°sicos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 2‚Ää-‚ÄäConstruindo o Ambiente: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 3‚Ää-‚ÄäVolumes Persistentes: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Como citei no &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3&#34;&gt;post anterior&lt;/a&gt; ainda existe um ponto de desconforto no ambiente, que √© o fato das senhas e usu√°rios estarem expostos diretamente nas configura√ß√µes. O Kubernetes oferece uma solu√ß√£o para esse problema os &lt;a href=&#34;https://kubernetes.io/docs/user-guide/secrets/&#34;&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;E agora irei mostrar como adicion√°-los ao projeto.&lt;/p&gt;

&lt;p&gt;Caso n√£o tenha mais os fontes at√© o estado do post anterior, ou prefira acompanhar o meu andamento, pode pode peg√°-los aqui: &lt;a href=&#34;https://github.com/lucassabreu/openshift-next-gen/tree/v2&#34;&gt;https://github.com/lucassabreu/openshift-next-gen/tree/v2&lt;/a&gt;; ou executar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone -b v2 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    https://github.com/lucassabreu/openshift-next-gen.git
&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;secrets&#34;&gt;Secrets&lt;/h4&gt;

&lt;p&gt;Existem algumas formas de criar e usar os mesmos, cri√°-los diretamente de arquivos, ou usando configura√ß√µes, e exp√¥-los aos cont√™ineres usando volumes ou vari√°veis de ambiente.&lt;/p&gt;

&lt;p&gt;Para essa aplica√ß√£o vou utilizar um YAML para definir um Secret e vou modificar os Pods para alimentarem as vari√°veis de ambiente com eles. A estrutura b√°sica do Secret √© como segue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Secret&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Opaque&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-root-password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;&amp;lt;hash base64&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-user&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;&amp;lt;hash base64&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;&amp;lt;hash base64&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-database-connection&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;&amp;lt;hash base64&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nele estou criando o Secret &lt;code&gt;mysql-secrets&lt;/code&gt; e definindo quatro chaves que representam as tr√™s vari√°veis do MySQL e uma do servidor HTTP. No lugar do &lt;code&gt;&amp;lt;hash base64&amp;gt;&lt;/code&gt; deve ir o conte√∫do do segredo em Base 64, que pode ser gerado usando o comando &lt;code&gt;echo -n &amp;quot;meusegredo&amp;quot; | base64 -w0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Eu n√£o gostei muito da ideia de guardar o Base 64 dentro da defini√ß√£o do Secret, ent√£o fiz a seguinte modifica√ß√£o no meu &lt;code&gt;mysql-secrets.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Secret&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Opaque&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-root-password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-user&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_USER&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_PASSWORD&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-database-connection&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;DATABASE_CONNECTION&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;E quando vou aplicar o Secret no Kubernetes uso este script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&amp;lt; /dev/urandom tr -dc _A-Z-a-z-0-9 &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; head -c&lt;span style=&#34;color: #e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;B64_MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; -n &lt;span style=&#34;color: #f8f8f2&#34;&gt;$MYSQL_ROOT_PASSWORD&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64 -w0&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;B64_DATABASE_USER&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; -n &lt;span style=&#34;color: #f8f8f2&#34;&gt;$DATABASE_USER&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64 -w0&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;B64_DATABASE_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; -n &lt;span style=&#34;color: #f8f8f2&#34;&gt;$DATABASE_PASSWORD&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64 -w0&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;B64_DATABASE_CONNECTION&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; -n &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$DATABASE_USER&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$DATABASE_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;@db-service:3306/appointments&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64 -w0&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;

sed &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;\&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|%MYSQL_ROOT_PASSWORD|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$B64_MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;\&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|%MYSQL_USER|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$B64_DATABASE_USER&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;\&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|%MYSQL_PASSWORD|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$B64_DATABASE_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;\&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;  s|%DATABASE_CONNECTION|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$B64_DATABASE_CONNECTION&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  mysql-secrets.yml &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; oc apply -f -
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esse script cria uma senha aleat√≥ria para o root e usa duas vari√°veis de ambiente para definir o usu√°rio e senha do MySQL, faz o Base 64 deles, injeta eles no arquivo via &lt;code&gt;sed&lt;/code&gt; no Secret e aplica no Kubernetes com &lt;code&gt;oc apply -f -&lt;/code&gt; que ir√° ler a sa√≠da do &lt;code&gt;sed&lt;/code&gt; e aplic√°-la. Na hora de executar fica assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span style=&#34;color: #f8f8f2&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATABASE_USER&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;appoint
$ &lt;span style=&#34;color: #f8f8f2&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATABASE_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;123&lt;/span&gt;
$ ./env-set-oc.sh
secret &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-secrets&amp;quot;&lt;/span&gt; configured
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Altero os Deployments para considerarem o Secret que criei:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-deployment&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-pod&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-mysql-test&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-port&amp;quot;&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3306&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_DATABASE&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;appointments&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;valueFrom&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                &lt;span style=&#34;color: #ae81ff&#34;&gt;secretKeyRef&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-root-password&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_USER&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;valueFrom&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                &lt;span style=&#34;color: #ae81ff&#34;&gt;secretKeyRef&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-user&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;valueFrom&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                &lt;span style=&#34;color: #ae81ff&#34;&gt;secretKeyRef&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-password&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;volumeMounts&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-persistent-volume&amp;quot;&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;mountPath&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/var/lib/mysql&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-persistent-volume&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;persistentVolumeClaim&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #ae81ff&#34;&gt;claimName&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-pv-claim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;small&gt;&lt;center&gt;db-deployment.yml&lt;/center&gt;&lt;/small&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-deployment&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-pod&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-app-test&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;node-port&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8080&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;DATABASE_CONNECTION&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;valueFrom&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                &lt;span style=&#34;color: #ae81ff&#34;&gt;secretKeyRef&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-secrets&lt;/span&gt;
                  &lt;span style=&#34;color: #ae81ff&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-database-connection&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;small&gt;&lt;center&gt;node-deployment.yml&lt;/center&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;A altera√ß√£o consiste de trocar a chave &lt;code&gt;value&lt;/code&gt; das vari√°veis por &lt;code&gt;valueFrom&lt;/code&gt; e apontar para as chaves corretas dentro do Secret.&lt;/p&gt;

&lt;p&gt;Depois que aplica as mudan√ßas os Deployments v√£o identific√°-las e trocar os Pods por novos. E passaram a utilizar os Secrets informado nas vari√°veis para eles.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ao final dessa s√©ria, a conclus√£o que posso chegar √© que o Kubernetes exige um conjunto razoavelmente grande de configura√ß√µes para podermos servir uma aplica√ß√£o, mas s√£o arquivos simples de se entender e muito bem &lt;a href=&#34;https://kubernetes.io/docs/reference/&#34;&gt;documentados&lt;/a&gt; o que facilitou bastante o processo, e n√£o me fez sentir o peso dessa quantidade.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää-‚ÄäParte¬†3</title>
      <link>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/</link>
      <pubDate>Thu, 09 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Este post √© a terceira parte de uma s√©rie sobre o b√°sico necess√°rio para
usar o Kubernetes, caso voc√™ n√£o tenha lido o post anterior recomendo
l√™-lo e depois voltar aqui para n√£o ficar perdido.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parte 1‚Ää-‚ÄäConceitos B√°sicos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 2‚Ää-‚ÄäConstruindo o Ambiente: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 4‚Ää-‚ÄäSegredos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-4&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Como comentei no &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2&#34;&gt;post anterior&lt;/a&gt; existem alguns problemas no ambiente que constru√≠, e o princ√≠pial deles √© que os Pods n√£o totalmente ef√™meros, ou seja, se eu adicionar novos dados nele, no momento que o Pod fosse destru√≠do os dados iriam junto e sem backup¬†!&lt;/p&gt;

&lt;p&gt;E agora iremos tratar esse primeiro problema. Caso n√£o tenha mais os fontes at√© o estado do post anterior, ou prefira acompanhar o meu andamento, pode pode peg√°-los aqui: &lt;a href=&#34;https://github.com/lucassabreu/openshift-next-gen/tree/v1&#34;&gt;https://github.com/lucassabreu/openshift-next-gen/tree/v1&lt;/a&gt;; ou executar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone -b v1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    https://github.com/lucassabreu/openshift-next-gen.git
&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;a297 .graf .graf--h4 .graf--leading name=&#34;a297&#34;&#34;&gt;Volumes Persistentes&lt;/h4&gt;

&lt;p&gt;Podemos testar esse problema conectando no Pod e adicionando alguns dados e ent√£o destruindo ele para ver o efeito. Vou adicionar um registro sobre para Homens no S√°bado, pois √© um dia sem nenhuma informa√ß√£o e facilita a visualiza√ß√£o.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/male-chart-before.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;Antes... sem¬†dados&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Para acessar o Pod usa-se o comando &lt;code&gt;oc rsh &amp;lt;pod-name&amp;gt;&lt;/code&gt;, e para encontrar o nome do Pod posso usar o comando &lt;code&gt;oc get pods -l &amp;lt;selector&amp;gt;&lt;/code&gt;, ent√£o √© s√≥ acessar o MySQL e inserir os dados:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ oc get pods -l &lt;span style=&#34;color: #f8f8f2&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;db-pod
NAME                             READY     STATUS    RESTARTS   AGE
db-deployment-3618823556-zrje2   &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;/1       Running   &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;          14m
$ oc rsh db-deployment-3618823556-zrje2 bash
&amp;lt;dentro cont√™iner&amp;gt;:/$ mysql -u&lt;span style=&#34;color: #f8f8f2&#34;&gt;$MYSQL_USER&lt;/span&gt; -p&lt;span style=&#34;color: #f8f8f2&#34;&gt;$MYSQL_PASSWORD&lt;/span&gt; appointments
mysql&amp;gt; insert into appointments values&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;21&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2017-03-05&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Sunday&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;, null&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
Query OK, &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; row affected &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;.00 sec&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Entrando novamente na aplica√ß√£o e indo em &amp;ldquo;Sunday&amp;rdquo;, tenho um gr√°fico com dados para os Homens.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/male-chart-changed.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;isso se o seu cont√™iner n√£o morrer no¬†caminho&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Para concluir o teste, basta apagar o Pod com &lt;code&gt;oc delete pods -l name=db-pod&lt;/code&gt; ou &lt;code&gt;oc delete pod db-deployment-xyz&lt;/code&gt;, esperar o Pod ser recriado e ent√£o ver que as altera√ß√µes nos dados se foram:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/male-chart-before.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;:&amp;#39;(&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Para resolver esse problema o Kubernetes possui os &lt;a href=&#34;https://kubernetes.io/docs/user-guide/persistent-volumes/&#34;&gt;&lt;strong&gt;Persistent Volume Claims (PVC)&lt;/strong&gt;&lt;/a&gt; que permitem definir volumes que existem fora do ciclo de vida de um Pod, ou seja, mesmo que todos os Pods sejam destru√≠dos, o PVC ir√° manter os dados em si.&lt;/p&gt;

&lt;p&gt;Podemos utilizar v√°rios tipos de volumes em um PVC para armazenar os dados, no caso do OpenShift o padr√£o √© &lt;a href=&#34;https://kubernetes.io/docs/user-guide/persistent-volumes/#aws&#34;&gt;EBS&lt;/a&gt;, que s√£o volumes armazenados dentro do &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS da Amazon&lt;/a&gt;, mas existe a op√ß√£o de usar volumes do Google Cloud, do Azure, Locais, etc; no Kubernetes.&lt;/p&gt;

&lt;p&gt;Mas no momento o OpenShift esta ofertando apenas o EBS. Abaixo esta a defini√ß√£o do PVC:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;PersistentVolumeClaim&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-pv-claim&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;accessModes&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;ReadWriteOnce&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1Gi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Depois de um momento o OpenShift ir√° criar um volume e disponibiliz√°-lo, agora √© preciso vincular ele com os &lt;code&gt;db-pods&lt;/code&gt;, para isso basta alterar os volumes no &lt;code&gt;db-deployment&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-deployment&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-pod&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-mysql-test&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-port&amp;quot;&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3306&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_DATABASE&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;appointments&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_USER&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;appoint&amp;quot;&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;volumeMounts&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-persistent-volume&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #75715e&#34;&gt;# mudou aqui&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;mountPath&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/var/lib/mysql&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-persistent-volume&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #75715e&#34;&gt;# e aqui&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;persistentVolumeClaim&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #ae81ff&#34;&gt;claimName&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql-pv-claim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Duas coisas foram alteradas no &lt;code&gt;db-deployment&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;O nome do volume mudou, isso √© necess√°rio porque estamos fazendo uma mudan√ßa de tipo de volume, e o Deployment n√£o consegue alterar o tipo, mas se temos um novo, ent√£o tudo bem.&lt;/li&gt;
&lt;li&gt;Adicionei a tag &lt;code&gt;persistentVolumeClaim&lt;/code&gt; no volume novo e apontei para o PVC que criei agora a pouco.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Executo o comando &lt;code&gt;oc apply -f db-deployment.yml&lt;/code&gt; e o Deployment ir√° destruir os Pods antigos e criar novos usando o PVC.&lt;/p&gt;

&lt;p&gt;Agora se replicarmos os comandos de para incluir registros e destruir o Pod do MySQL, quando o Deployment recriar o Pod ele manter√° os dados.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Outro ponto que esta desconfort√°vel no meu ambiente √© o fato das senhas e usu√°rios estarem expostas diretamente nas configura√ß√µes. O Kubernetes oferece uma solu√ß√£o para esse problema, que irei abordar no pr√≥ximo post.&lt;/p&gt;

&lt;p&gt;Pr√≥ximo Post: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-usando-kubernetes-e-openshift-parte-4/&#34;&gt;clique aqui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää-‚ÄäParte¬†2</title>
      <link>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Este post √© parte de uma s√©rie sobre o b√°sico necess√°rio para usar o Kubernetes, caso voc√™ n√£o tenha lido os post anteriores recomendo l√™-los e depois voltar aqui para n√£o ficar perdido.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parte 1‚Ää-‚ÄäConceitos B√°sicos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 3‚Ää-‚ÄäVolumes Persistentes: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 4‚Ää-‚ÄäSegredos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-4&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Conhecendo os componentes b√°sicos explicados no &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1&#34;&gt;post anterior&lt;/a&gt; posso preparar a aplica√ß√£o que mostrei para o Kubernetes.&lt;/p&gt;

&lt;p&gt;O primeiro passo √© definir quais s√£o os Pods do meu cluster.&lt;/p&gt;

&lt;p&gt;Embora o primeiro impulso seja colocar cada um dos cont√™ineres em um Pod distinto e seguir em frente, esse n√£o √© necessariamente a melhor forma de defini-los. Por exemplo, em situa√ß√£o certos cont√™ineres tem o mesmo objetivo, ou dependem muito um do outro √© uma boa ideia mant√™-los juntos.&lt;/p&gt;

&lt;p&gt;Mas para a minha aplica√ß√£o faz mais sentido um Pod por cont√™iner, um para o servidor HTTP e outro para o banco de dados.&lt;/p&gt;

&lt;p&gt;Como n√£o √© uma boa ideia simplesmente definir um Pod diretamente, criei dois Deployments o &lt;code&gt;node-deployment&lt;/code&gt; e o &lt;code&gt;db-deployment&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;No momento da escrita desse post os Deployments ainda estavam marcados como uma vers√£o beta, mas j√° s√£o bastante usados, ent√£o √© confi√°vel.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-deployment&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-pod&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-mysql-test&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-port&amp;quot;&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3306&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_DATABASE&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;appointments&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_USER&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;appoint&amp;quot;&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;MYSQL_PASSWORD&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;volumeMounts&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-volume&amp;quot;&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;mountPath&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/var/lib/mysql&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-volume&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O primeiro Deployment √© para o &lt;code&gt;db-deployment&lt;/code&gt;. Os arquivos de configura√ß√£o s√£o simples de ler, sempre come√ßamos o arquivo dizendo o tipo de objeto que ser√° criado, o &lt;code&gt;metadata&lt;/code&gt; e definimos as &lt;code&gt;specs&lt;/code&gt; (que variam para cada tipo de componente).&lt;/p&gt;

&lt;p&gt;Defini que preciso de apenas um Pod (&lt;code&gt;replica&lt;/code&gt;) e que as mesmas ser√£o identific√°veis pelas labels: &lt;code&gt;name=db-pod&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Outras duas informa√ß√µes importantes s√£o &lt;code&gt;ports&lt;/code&gt; e &lt;code&gt;volumeMounts&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ports&lt;/code&gt; define quais portas dever√£o ser expostas no Pod e permite que possam ser mapeadas nos Services posteriormente. Tamb√©m √© recomendado dar nomes √†s mesmas (&lt;code&gt;mysql-port&lt;/code&gt;), assim podemos usar o nome como identificador no lugar de n√∫meros.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;volumeMounts&lt;/code&gt; define todos os volumes do cont√™iner, dessa forma o volume de dados do MySQL precisou ser mapeado (&lt;code&gt;/var/lib/mysql&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-deployment&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-pod&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-app-test&amp;quot;&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;node-port&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8080&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;DATABASE_CONNECTION&lt;/span&gt;
              &lt;span style=&#34;color: #ae81ff&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;mysql://appoint:123@db-service:3306/appointments&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O segundo Deployment √© do servidor HTTP, chamei-o de &lt;code&gt;node-deployment&lt;/code&gt;. Ele segue as mesmas regras do anterior, sendo at√© mais simples.&lt;/p&gt;

&lt;p&gt;A novidade aqui √© o &lt;code&gt;db-service&lt;/code&gt;, que vou explicar agora:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-service&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3306&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;targetPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;mysql-port&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;db-pod&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O &lt;code&gt;db-service&lt;/code&gt; √© o nome do Service que defini para agrupar os Pods de banco de dados, o Service ficou bem simples e basicamente tem duas partes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;selector&lt;/code&gt; define uma regra para selecionar quais Pods fazem parte do Service, no caso estou usando uma regra bem simples de &lt;code&gt;name=db-pod&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ports&lt;/code&gt; permite que voc√™ mapeie as portas dos Pods para uma porta no Service, no caso estou roteando a porta de nome &lt;code&gt;mysql-port&lt;/code&gt; para a &lt;code&gt;3306&lt;/code&gt; do Service. Assim toda chamada para &lt;code&gt;db-service:3306&lt;/code&gt; ser√° direcionada para a &lt;code&gt;mysql-port&lt;/code&gt; de um dos Pods.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-service&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;targetPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-port&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-pod&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O &lt;code&gt;node-service&lt;/code&gt; segue a mesma l√≥gica, mas para os Pods do servidor HTTP.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Route&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-route&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;node-service&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por fim criei uma Route para expor o servi√ßo &lt;code&gt;node-service&lt;/code&gt; para a Internet. Eu poderia definir qual o nome de host, mas como n√£o o fiz o OpenShift ir√° gerar uma URL automaticamente para mim.&lt;/p&gt;

&lt;p&gt;Essa URL pode ser descoberta entrando na Dashboard do OpenShift ou com o comando &lt;code&gt;oc get routes&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ oc get routes
NAME         HOST/PORT                                                  PATH      SERVICES       PORT      TERMINATION
node-route   node-route-medium-example.44fs.preview.openshiftapps.com             node-service   &amp;lt;all&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para aplicar as configura√ß√µes no cluster a OpenShift disponibiliza um cliente de linha de comando, que usa basicamente a mesma estrutura do &lt;code&gt;kubectl&lt;/code&gt;, o &lt;code&gt;oc&lt;/code&gt;. Ent√£o tudo que precisa ser feito √© executar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;oc apply -f db-deployment.yml,node-deployment.yml,db-srv.yml,node-srv.yml,node-route.yml
&lt;span style=&#34;color: #75715e&#34;&gt;# Ou&lt;/span&gt;
oc apply -f db-deployment.yml
oc apply -f node-deployment.yml
oc apply -f db-srv.yml
oc apply -f node-srv.yml
oc apply -f node-route.yml
&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;As instru√ß√µes de como instalar o cliente e configur√°-lo est√£o nesse
link: &lt;a href=&#34;https://console.preview.openshift.com/console/command-line&#34;&gt;https://console.preview.openshift.com/console/command-line&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;update-2017-04-29&#34;&gt;*** Update 2017‚Äì04‚Äì29 ***&lt;/h4&gt;

&lt;p&gt;Se estiver lendo esse artigo algum tempo depois de lan√ßado, a OpenShift fechou o preview e o link anterior n√£o funciona, mas ainda √© poss√≠vel baixar o &lt;code&gt;oc&lt;/code&gt; client em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/openshift/origin/releases&#34; title=&#34;https://github.com/openshift/origin/releases&#34;&gt;&lt;strong&gt;openshift/origin&lt;/strong&gt; origin - Enterprise Kubernetes for Developers&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Caso n√£o queira criar os todos esses fontes, pode peg√°-los aqui: &lt;a href=&#34;https://github.com/lucassabreu/openshift-next-gen/tree/v1&#34;&gt;https://github.com/lucassabreu/openshift-next-gen/tree/v1&lt;/a&gt;; ou executar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone -b v1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    https://github.com/lucassabreu/openshift-next-gen.git
&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Agora no console do OpenShift dever√£o aparecer todos esses componentes
rodando.&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2/openshift-dashboard.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;eu fiz algumas brincadeiras antes de chegar aqui, ent√£o tenho mais vers√µes dos deploys¬†‚ò∫&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Caso esteja acompanhando as etapas, voc√™ j√° deve ter visto esse Dashboard, mas caso esteja apenas lendo: esse Dashboard √© a tela principal dos clusters que voc√™ criar no OpenShift; basta clicar aqui, autenticar-se com o GitHub, criar um &lt;strong&gt;Project&lt;/strong&gt;, e pronto em &lt;strong&gt;Overview&lt;/strong&gt; voc√™ ver√° os componentes surgirem e sumirem em tempo real conforme vai aplicando as configura√ß√µes.&lt;/p&gt;

&lt;p&gt;Voltando, nesse momento temos o mesmo comportamento da aplica√ß√£o local, rodando dentro do Kubernetes, empenhando o m√≠nimo poss√≠vel de configura√ß√£o.&lt;/p&gt;

&lt;p&gt;Mas existem alguns problemas no que foi definido.&lt;/p&gt;

&lt;p&gt;O primeiro √© que os &lt;code&gt;db-pods&lt;/code&gt; est√£o totalmente ef√™meros, ou seja, se eu adicionar novos dados nele, no momento que o Pod fosse destru√≠do os dados iriam junto e sem backup¬†!&lt;/p&gt;

&lt;p&gt;Irei mostrar como resolver esse problema no pr√≥ximo post.&lt;/p&gt;

&lt;p&gt;Pr√≥ximo Post: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/&#34;&gt;clique aqui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää-‚ÄäParte¬†1</title>
      <link>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Como parte das minhas metas dentro da &lt;a href=&#34;http://blog.coderockr.com&#34;&gt;Coderockr&lt;/a&gt; est√° a constru√ß√£o de um cluster usando algumas das ferramentas de orquestra√ß√£o de cont√™ineres que existem no mercado; como o &lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;, &lt;a href=&#34;http://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;http://mesos.apache.org/&#34;&gt;Apache Mesos&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;Optei pelo &lt;strong&gt;Kubernetes&lt;/strong&gt; no momento, tanto pelo pedigree, criado pelo Google e mantido pela Cloud Native Computing Foundation; quanto pela oferta de grandes clouds como a Red Hat, Azure e Google.&lt;/p&gt;

&lt;p&gt;Quando estava avaliando as op√ß√µes dispon√≠veis, o &lt;a href=&#34;https://medium.com/@JeanCarloMachad&#34;&gt;Jean Carlo Machado&lt;/a&gt; (colega da &lt;a href=&#34;https://medium.com/@compufacil&#34;&gt;CompuF√°cil&lt;/a&gt;), me sugeriu usar o &lt;a href=&#34;https://blog.openshift.com/next-generation-openshift-online/&#34;&gt;&lt;strong&gt;OpenShift Next Gen&lt;/strong&gt;&lt;/a&gt;, a plataforma da Red Hat para Kubernetes, que esta em &lt;a href=&#34;https://www.openshift.com/devpreview/&#34;&gt;Developer Preview&lt;/a&gt; permitindo que voc√™ se cadastre para testar a ferramenta deles por 30 dias.&lt;/p&gt;

&lt;p&gt;Isso me salvou de j√° ter de sair pagando para testar, ou ter de fazer o &lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/minikube/&#34;&gt;setup do minikube&lt;/a&gt; na minha m√°quina, o que n√£o me era muito atrativo.&lt;/p&gt;

&lt;p&gt;Assim resolvi dar uma chance a plataforma da Red Hat, e construir um ambiente simples com um servidor HTTP em Node e um banco de dados MySQL, o que j√° me permite cobrir v√°rios aspectos b√°sicos do Kubernetes.&lt;/p&gt;

&lt;p&gt;Mas como o texto foi ficando muito grande, achei melhor quebr√°-lo em 4 partes para n√£o cansar quem for ler e que irei publicar nos pr√≥ximos dias.&lt;/p&gt;

&lt;p&gt;Nessa primeira parte vou dar uma introdu√ß√£o aos conceitos b√°sicos do Kubernetes, e nas pr√≥ximas irei fazer uso desses conceitos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parte 2‚Ää-‚ÄäConstruindo o Ambiente: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2/&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 3‚Ää-‚ÄäVolumes Persistentes: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-3/&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parte 4‚Ää-‚ÄäSegredos: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-4/&#34;&gt;clique aqui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;A aplica√ß√£o que constru√≠ usa um &lt;a href=&#34;https://www.kaggle.com/joniarroba/noshowappointments&#34;&gt;conjunto de dados sobre faltas em consultas&lt;/a&gt; que achei no &lt;a href=&#34;https://www.kaggle.com/&#34;&gt;Kaggle&lt;/a&gt; e gera os gr√°ficos abaixo, podendo escolher o dia da semana como filtro.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/app-view.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;O fonte dessa aplica√ß√£o pode ser encontrado aqui: &amp;lt;https://github.com/lucassabreu/openshift-next-gen/tree/app&amp;gt;&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Ent√£o publiquei no &lt;a href=&#34;http://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; uma imagem para a aplica√ß√£o (&lt;a href=&#34;https://hub.docker.com/r/lucassabreu/openshift-app-test/&#34;&gt;lucassabreu/openshift-app-test&lt;/a&gt;) e outra para o banco de dados (&lt;a href=&#34;https://hub.docker.com/r/lucassabreu/openshift-mysql-test/&#34;&gt;lucassabreu/openshift-mysql-test&lt;/a&gt;)‚Ää-‚Ääessa imagem √© um MySQL normal, mas que adicionei um dump da base que vou usar para facilitar o deploy.&lt;/p&gt;

&lt;p&gt;Agora se eu quiser executar essa aplica√ß√£o na minha m√°quina, posso simplesmente executar os seguintes comando do Docker e terei o servidor me respondendo em &lt;code&gt;http://localhost&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;
docker run -d --name db-test &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  -e &lt;span style=&#34;color: #f8f8f2&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;root -e &lt;span style=&#34;color: #f8f8f2&#34;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;appointments &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  -e &lt;span style=&#34;color: #f8f8f2&#34;&gt;MYSQL_USER&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;appoint -e &lt;span style=&#34;color: #f8f8f2&#34;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  lucassabreu/openshift-mysql-test

docker run -d --name app-test --link db-test:db &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  -e &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATABASE_CONNECTION&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql://appoint:123@&lt;span style=&#34;color: #f8f8f2&#34;&gt;$db&lt;/span&gt;:3306/appointments &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  -p &lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;:8080 lucassabreu/openshift-app-test
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Certo, agora que tenho certeza de que a minha aplica√ß√£o est√° operacional, comecei a criar os objetos do Kubernetes, mas antes √© importante entender alguns conceitos da plataforma para n√£o ficar muito perdido:&lt;/p&gt;

&lt;h4 id=&#34;pod-https-kubernetes-io-docs-user-guide-pods&#34;&gt;&lt;a href=&#34;https://kubernetes.io/docs/user-guide/pods/&#34;&gt;Pod&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Este √© o menor componente do Kubernetes, representa um n√≥ no cluster, executando um ou mais cont√™ineres que entregam uma mesma fun√ß√£o.&lt;/p&gt;

&lt;p&gt;Eles tem a caracter√≠stica de serem descart√°veis, ou seja, se eventualmente acontecer algum problema a um Pod, este pode ser destru√≠do sem nenhum efeito colateral ou remorso.&lt;/p&gt;

&lt;h4 id=&#34;deployment-https-kubernetes-io-docs-user-guide-deployments&#34;&gt;&lt;a href=&#34;https://kubernetes.io/docs/user-guide/deployments/&#34;&gt;Deployment&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Como o nome sugere controla o deploy de Pods dentro do cluster. Quando se cria esse componente, deve-se informar um template de Pod e quantos destes voc√™ precisa, e se necess√°rio uma regra para criar mais inst√¢ncias.&lt;/p&gt;

&lt;p&gt;Ele ir√° garantir duas coisas principalmente: que existam suficientes Pods quanto foi definido, e que os mesmos estejam atualizados em rela√ß√£o ao template que foi definido.&lt;/p&gt;

&lt;p&gt;Ent√£o caso voc√™ mude algo no template o Deployment vai subir novos Pods e destruir os antigos para manter a expectativa (ele tamb√©m &amp;ldquo;versiona&amp;rdquo; os deploys, ent√£o se algo explodir d√° para voltar atr√°s).&lt;/p&gt;

&lt;h4 id=&#34;service-https-kubernetes-io-docs-user-guide-services&#34;&gt;&lt;a href=&#34;https://kubernetes.io/docs/user-guide/services/&#34;&gt;Service&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Como os Pods al√©m de ef√™meros, podem existir em n√∫meros variados por culpa dos Deployments, n√£o h√° forma confi√°vel de tentar conectar dois Pods diretamente, seja porque o Pod que voc√™ est√° dependendo pode morrer e quando voltar ter√° outro IP, e provavelmente outro nome, ou porque o Pod que voc√™ &amp;ldquo;fixou&amp;rdquo; pode n√£o ser o mas indicado (menos ocupado ou mais pr√≥ximo).&lt;/p&gt;

&lt;p&gt;Para resolver esse problema existem os Services, em vez de tentar fazer as chamadas diretamente para um Pod, podemos chamar pelo nome de um Service e este ir√° rotear para um Pod que esteja abaixo dele.&lt;/p&gt;

&lt;p&gt;√â importante ressaltar que os Services fazem &amp;ldquo;apenas&amp;rdquo; a descoberta dos Pods, eles n√£o os mant√™m ligados, isso √© responsabilidade dos Deployments.&lt;/p&gt;

&lt;h4 id=&#34;route-https-docs-openshift-org-latest-architecture-core-concepts-routes-html&#34;&gt;&lt;a href=&#34;https://docs.openshift.org/latest/architecture/core_concepts/routes.html&#34;&gt;Route&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Permitem que voc√™ exponha Services para a rede externa e tamb√©m permite algumas regras de proxy para melhor apresent√°-los.&lt;/p&gt;

&lt;p&gt;Embora seja poss√≠vel fazer a exposi√ß√£o de Services para a rede externa com Kubernetes, na plataforma da OpenShift √© necess√°rio o uso do componente Route para isso.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Como comentei no in√≠cio, estou escrevendo uma s√©rie de postagens para mostrar como usar o b√°sico do Kubernetes, e no pr√≥ximo post irei usar os conceitos que acabei de descrever para implementar o ambiente.&lt;/p&gt;

&lt;p&gt;Pr√≥ximo Post: &lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-2/&#34;&gt;clique aqui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Steps e a concep√ß√£o de um produto</title>
      <link>http://www.lucassabreu.net.br/post/steps-e-a-concepcao-de-um-produto/</link>
      <pubDate>Fri, 24 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/steps-e-a-concepcao-de-um-produto/</guid>
      <description>&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Recentemente na newsletter do Product Hunt me deparei com um aplicativo bem interessante que se propunha a solucionar um problema bem comum, com uma formula bem simples.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://medium.com/steps&#34;&gt;Steps&lt;/a&gt; √© um produto criado por &lt;a href=&#34;https://medium.com/@fabianehlert&#34;&gt;Fabian Ehlert&lt;/a&gt; e &lt;a href=&#34;https://medium.com/@rikkekoblauch&#34;&gt;Rikke Koblauch&lt;/a&gt; que se prop√µe a resolver o problema da ansiedade utilizando um m√©todo de terapia de exposi√ß√£o. Esse formato de terapia se baseia na ideia de voc√™ ir concluindo atividades que te for√ßam a lidar com seus medos, no caso da ansiedade, por exemplo, seria dar &lt;a href=&#34;https://medium.com/steps/how-high-fiving-strangers-helps-me-design-products-335775285d8a#.djjw4zqqt&#34;&gt;high fives com pessoas desconhecidas na rua&lt;/a&gt;.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;https://cdn-images-1.medium.com/max/800/1*zQ_-ZA-F8K4gCk4cM9jZrQ.jpeg&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;peguei a imagem da capa deles¬†:)&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Como comentei, a proposta √© simples e a solu√ß√£o bem simples e parece ser bem efetiva pelo jeito, eles &lt;a href=&#34;https://medium.com/steps/i-went-to-a-restaurant-by-myself-like-a-psychopath-7774db61225#.vc26zjzgb&#34;&gt;testaram em si mesmos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas o que realmente me fez escrever esse post foi lendo os artigos postados com eles e ver a caminhada para definir a solu√ß√£o deles, e como eles aplicaram algumas etapas na evolu√ß√£o do conceito.&lt;/p&gt;

&lt;p&gt;Eles n√£o tentaram sair resolvendo o problema de uma vez, preferiram fazer um pret√≥tipo (tradu√ß√£o livre de &lt;em&gt;pretotype&lt;/em&gt;), construindo um &lt;a href=&#34;https://medium.com/steps/two-steps-forward-one-step-back-89de69d79818#.ucau3jkyo&#34;&gt;chatbot para validar o conceito&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Descobriram que talvez um chat com um rob√¥ n√£o fosse a melhor forma de resolver o problema, por que n√£o trazia a sensa√ß√£o de comunidade. propunham os desafios e as pessoas comentavam suas hist√≥rias de como Pegaram as li√ß√µes aprendidas e criar√£o um grupo do Facebook onde conclu√≠ram o desafio.&lt;/p&gt;

&lt;p&gt;Criaram uma &amp;ldquo;&lt;a href=&#34;https://medium.com/steps/welcome-to-fearshop-a5046e049ab8#.re4sa2hn0&#34;&gt;Fearshop&lt;/a&gt;&amp;rdquo; para para se entenderem os problemas/medos mais comuns dentro das pessoas que procuram atender, usaram isso tanto para discutir as dores, das pessoas que vieram (quanto de si mesmos, j√° que parece que eles tamb√©m sofrem do mal que tentam tratar), quanto para coletar dados sobre quais os problemas mais comuns e direcionar o esfor√ßo deles naquele sentido.&lt;/p&gt;

&lt;p&gt;S√≥ ent√£o criaram um &lt;a href=&#34;http://itunes.apple.com/app/id1185312069?source=collection_home---2------0----------&#34;&gt;App&lt;/a&gt; (hoje apenas dispon√≠vel pra iPhone) usando o aprendizado deles, isso porque agora eles viram uma forma de usar a tecnologia como uma vantagem para alcan√ßar mais pessoas.&lt;/p&gt;

&lt;p&gt;Essa caminhada √© uma forma muito v√°lida de definir um produto&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eles tiveram uma ideia: usar terapia de exposi√ß√£o para ajudar pelos com ansiedade a lidar com o problema delas,&lt;/li&gt;
&lt;li&gt;definiram uma solu√ß√£o r√°pida para validar a ideia: um chat bot,&lt;/li&gt;
&lt;li&gt;viram que a solu√ß√£o n√£o era o suficiente, ‚Äúabandonaram‚Äù aquilo e criar√£o outras solu√ß√µes que envolviam um pouco mais ou um pouco menos tecnologia para tentar resolver o problema&lt;/li&gt;
&lt;li&gt;aprenderam e criar√£o um nova solu√ß√£o, mas completa e tem tido um √≥timo feedback sobre ela (vide &lt;em&gt;newsletter&lt;/em&gt; do Product Hunt e parece que foram &lt;a href=&#34;https://twitter.com/Rikkekoblauch/status/834813600099352577&#34;&gt;destaque na App Store&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Em todas elas eles validavam as etapas, aprendiam com elas e avan√ßavam, sem medo de jogar fora o constru√≠do e criar novamente sem necessariamente estar &lt;em&gt;precisando&lt;/em&gt; usar solu√ß√µes tecnol√≥gicas avan√ßadas e com uma proximidade grande com o p√∫blico deles.&lt;/p&gt;

&lt;p&gt;Pelos posts demostram que √© algo que eles realmente tiveram/t√™m muita paix√£o em fazer.&lt;/p&gt;

&lt;p&gt;Eu recomendo dar uma passada no blog deles e dar uma lida nos posts, est√£o muito bons:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://medium.com/steps&#34;&gt;&lt;strong&gt;Steps&lt;/strong&gt; An app helping you overcome social anxiety&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;S√≥ queria compartilhar esse projeto que tropecei pela internet e
recomendar uma boa leitura.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simplificando o Setup de Projetos no GitHub</title>
      <link>http://www.lucassabreu.net.br/post/simplificando-setup-projetos-github/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/simplificando-setup-projetos-github/</guid>
      <description>&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Na &lt;a href=&#34;http://blog.coderockr.com/&#34;&gt;Coderockr&lt;/a&gt; iniciamos e assumimos v√°rios projetos, sejam para clientes que nos contratam ou para a√ß√µes internas, e normalmente o &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt; acaba sendo a ferramenta escolhida para eles.&lt;/p&gt;

&lt;p&gt;E ao longo dos anos acabamos definindo uma estrutura para controlarmos as nossas issues, usando as seguintes labels:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/simplificando-setup-projetos-github/labels.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;Conjunto de labels utilizadas no Coderockr Way&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;√â um conjunto bem simples, mas que deixa bem claro as etapas, prioridades, tipos e estados das tarefas, de forma que fica bem f√°cil de acompanh√°-las.&lt;/p&gt;

&lt;p&gt;Em todos os projetos cadastramos essas labels. Mas mesmo que voc√™ esteja de bom humor, vai ser um trabalho chato e moroso. E √© bem prov√°vel que esque√ßa alguma delas, e precise revisar a lista para garantir que est√£o todas l√°.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/simplificando-setup-projetos-github/looking-for.gif&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;Esqueci o &amp;#34;Stage: Testing&amp;#34;? Achei...&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Pensando nessa monotonia e para economizar algum tempo de setup nos projetos resolvemos criar um script que fizesse esse processo, adicionando as labels a um projeto que fosse informado.&lt;/p&gt;

&lt;p&gt;O script acabou ficando bem mais simples que o esperado gra√ßas a simplicidade da API do GitHub, todo ele foi feito com cURL e alguns loops no bash para as labels.&lt;/p&gt;

&lt;p&gt;At√© preparamos ele para n√£o precisar ser baixado/instalado, basta dar um cURL direto do reposit√≥rio do GitHub que ele pede os dados que precisa.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/simplificando-setup-projetos-github/no-need-for-downloads.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;nem precisa baixar&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Resolvemos deixar o script que criamos em um reposit√≥rio p√∫blico no GitHub para quem estiver procurando uma solu√ß√£o parecida (ou que agora acha que vale a pena criar um tamb√©m).&lt;/p&gt;

&lt;p&gt;O script e como us√°-lo est√£o aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Coderockr/coderockr-way-github-setup&#34;&gt;&lt;strong&gt;Coderockr/coderockr-way-github-setup&lt;/strong&gt; - Basic setup to use the Coderockr Way methodology&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conclus√£o, investir um pouco de tempo para entender as ferramentas que voc√™ usa, n√£o s√≥ te poupa tempo a longo prazo, quanto tamb√©m gera uns scripts legais de compartilhar :)&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>