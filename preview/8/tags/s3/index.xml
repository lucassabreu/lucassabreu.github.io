<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>s3 on Lucas dos Santos Abreu</title><link>http://www.lucassabreu.net.br/preview/8/tags/s3/</link><description>Recent content in s3 on Lucas dos Santos Abreu</description><generator>Hugo -- gohugo.io</generator><language>pt-BR</language><lastBuildDate>Sat, 31 Mar 2018 22:00:00 -0300</lastBuildDate><atom:link href="http://www.lucassabreu.net.br/preview/8/tags/s3/index.xml" rel="self" type="application/rss+xml"/><item><title>Aplicando HTTPS para uma SPA na¬†AWS</title><link>http://www.lucassabreu.net.br/preview/8/post/aplicando-https-para-uma-spa-na-aws/</link><pubDate>Sat, 31 Mar 2018 22:00:00 -0300</pubDate><guid>http://www.lucassabreu.net.br/preview/8/post/aplicando-https-para-uma-spa-na-aws/</guid><description>Como aplicamos HTTPS para o nosso frontend usando as ferramentas da AWS</description><content:encoded><![CDATA[<p>Recentemente passamos a servir a nossa landing page e o SPA do <a href="https://planrockr.com/">Planrockr</a> sobre HTTPS, inicialmente apenas estamos usando HTTPS no nosso backend, mas percebemos que seria melhor que nosso frontend tamb√©m usasse.</p>
<p>Alguns dos motivos por traz disso seriam para melhorar o <a href="https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html">ranking em sites de pesquisa</a>, para garantir ainda mais a seguran√ßa nas comunica√ß√µes, e tamb√©m para passar mais seguran√ßa para os nossos usu√°rios.</p>
<p>Como estamos servindo nosso  frontend usando o S3 da AWS, √© apenas uma quest√£o de colocar um CloudFront na frente e alterar a rota no Route 53 e tudo passa a funcionar, mas acabou dando alguma dor de cabe√ßa, n√£o por ser uma tarefa dif√≠cil, mas simplesmente por termos encontrado instru√ß√µes confusas e err√¥neas quando pesquisamos como executar a migra√ß√£o.</p>
<p>A maioria dos tutoriais que existem na internet sobre habilitar HTTPS no AWS para um SPA passam a instru√ß√£o errada de que n√£o podemos usar o link facilitado do S3 para vincular com o CloudFront. Isso acabou em um conjunto problemas de comunica√ß√£o com o S3, e o fez rejeitar as chamadas vindas do CloudFront; e passar a simplesmente redirecionar para a URL p√∫blica do bucket, quebrando algumas funcionalidades do Planrockr, principalmente no on-boarding.</p>
<p>Para evitar que outros acabem passando por problemas semelhantes e para servir de registro para projetos futuros, abaixo vou descrever a forma correta (e f√°cil) de habilitar HTTPS usando o S3 e CloudFront da AWS.</p>
<hr>
<p>Para usar HTTPS em um bucket do S3, primeiro √© necess√°rio possuir um bucket (üòú), para esse tutorial, criei um bucket com o nome <code>simple.planrockr.com</code>, e adicionei um arquivo <code>index.html</code> bem simples:</p>
<div class="highlight"><pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">&lt;<span style="color:#268bd2">html</span>&gt;

&lt;<span style="color:#268bd2">head</span>&gt;
    &lt;<span style="color:#268bd2">title</span>&gt;Example&lt;/<span style="color:#268bd2">title</span>&gt;
&lt;/<span style="color:#268bd2">head</span>&gt;

&lt;<span style="color:#268bd2">body</span>&gt;
    &lt;<span style="color:#268bd2">h1</span>&gt;Hello World&lt;/<span style="color:#268bd2">h1</span>&gt;
&lt;/<span style="color:#268bd2">body</span>&gt;

&lt;/<span style="color:#268bd2">html</span>&gt;
</code></pre></div><p>Habilitei o mesmo para funcionar como <em>Static website hosting</em>, ent√£o posso acessar a URL <a href="http://simple.planrockr.com.s3-website-sa-east-1.amazonaws.com/">http://simple.planrockr.com.s3-website-sa-east-1.amazonaws.com/</a> e verei o seguinte:</p>


	

<figure >
	<img
		class="lazyload blur-up"
		loading="lazy"
		data-src="/uploads/https-aws-s3-cf_index.html-sem-https.png"
		
			width="552" height="292"
		
	/>
	
		<figcaption><p>P√°gina simples servida via HTTP</p></figcaption>
	
</figure>

<p>Com esse bucket podemos simular a migra√ß√£o de uma &ldquo;SPA&rdquo; no S3 sem HTTPS para uma usando CloudFront para servir via HTTPS.</p>
<p>O primeiro √© acessar o dashboard do CloudFront no AWS, nele acesse o bot√£o <strong>Create Distribution</strong>:</p>


	

<figure >
	<img
		class="lazyload blur-up"
		loading="lazy"
		data-src="/uploads/https-aws-s3-cf_cloudfront-dashboard.png"
		
			width="753" height="229"
		
	/>
	
		<figcaption><p>Bot√£o Create Distribution CloudFront</p></figcaption>
	
</figure>

<p>Ir na op√ß√£o para Web:</p>


	

<figure >
	<img
		class="lazyload blur-up"
		loading="lazy"
		data-src="/uploads/https-aws-s3-cf_cloudfront-get-started.png"
		
			width="1286" height="290"
		
	/>
	
		<figcaption><p>Get Started do CloudFront (Web)</p></figcaption>
	
</figure>

<p>Na tela <strong>Create Distribution</strong>, informe o nome do bucket que deseja usar, e selecione-o quando aparecer na lista.</p>


	

<figure >
	<img
		class="lazyload blur-up"
		loading="lazy"
		data-src="/uploads/https-aws-s3-cf_cloudfront-create-distribution.png"
		
			width="884" height="192"
		
	/>
	
		<figcaption><p>CloudFront Create Distribution, selecionar bucket</p></figcaption>
	
</figure>

<p>Eu recomendo marcar a op√ß√£o &ldquo;Redirect HTTP to HTTPS&rdquo; em <strong>Viewer Protocol Policy</strong>, para que o seu site/SPA sempre seja acessado via HTTPS, mesmo que o usu√°rio tenha um link com HTTP apenas.</p>
<p>O resto √© bem simples, pode deixar tudo no padr√£o, e apenas informar o certificado e os &ldquo;CNAMEs&rdquo; para o seu servi√ßo.</p>
<p>Como normalmente um SPA usa algum framework JavaScript para gerenciar as rotas (como no nosso caso o <code>react-routes</code>), ent√£o √© necess√°rio configurar algumas regras na distribution do CloudFront para que ele direcione todas as chamadas para o seu <code>index.html</code> base que ira lidar com as rotas.</p>
<p>Para isso entre na distribution, na aba &ldquo;Error Pages&rdquo;, vamos adicionar duas regras para que todas as chamadas para arquivos que n√£o existam no bucket sejam direcionadas para o <code>index.html</code> do SPA.</p>
<p>Fica assim:</p>


	

<figure >
	<img
		class="lazyload blur-up"
		loading="lazy"
		data-src="/uploads/https-aws-s3-cf_cloudfront-create-error-page.png"
		
			width="717" height="424"
		
	/>
	
		<figcaption><p>CloudFront Custom Error Response Settings</p></figcaption>
	
</figure>

<p>O S3 retorna os Status Codes <code>403</code> e <code>404</code> quando n√£o consegue achar um arquivo ou n√£o permite acesso a ele, desse modo criando a regra acima para esses dois Status Codes todas as requisi√ß√µes (que n√£o forem de assets) ser√£o direcionados ao <code>index.html</code>.</p>
<p>Depois destes ajustes voc√™ tem um bucket do S3 sendo servido com HTTPS pelo CloudFront sem quaisquer problemas.</p>
<hr>
<p>√â importante dizer que essa solu√ß√£o √© muito boa para SPAs, mas se possuir regras mais complexas de redirecionamentos, ou mais ‚Äúp√°ginas principais‚Äù para o mesmo site, ent√£o provavelmente n√£o vai lhe atender, pois n√£o h√° suporte no CloudFront para isso, seria necess√°rio tratar na origem que o CloudFront estiver lendo.</p>
]]></content:encoded></item></channel></rss>