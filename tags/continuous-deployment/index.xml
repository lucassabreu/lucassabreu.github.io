<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Continuous Deployment on Lucas dos Santos Abreu</title>
    <link>http://www.lucassabreu.net.br/tags/continuous-deployment/index.xml</link>
    <description>Recent content in Continuous Deployment on Lucas dos Santos Abreu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <atom:link href="http://www.lucassabreu.net.br/tags/continuous-deployment/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ambientes por Branch com OpenShift Next Gen usando¬†GitHub</title>
      <link>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen-usando-github/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen-usando-github/</guid>
      <description>&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/header.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;&lt;i&gt;Esta postagem √© uma continua√ß√£o da &lt;a href=&#34;http://www.lucassabreu.net.br/post/ambientes-por-branch-com-openshift-next-gen&#34;&gt;&lt;strong&gt;Ambientes por Branch com OpenShift Next Gen&lt;/strong&gt;&lt;/a&gt;, a introdu√ß√£o do problema esta l√° e tamb√©m mostro como implementar o processo de deploy usando o GitLab nele, se n√£o viu da uma conferida, vale o investimento* üòâ.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Como prometi na outra postagem, vamos criar um processo de deploy de ambientes por branch usando o &lt;a href=&#34;https://medium.com/@github&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No caso do GitHub, ele cobre &amp;ldquo;apenas&amp;rdquo; a parte de reposit√≥rio de fontes, ele em si n√£o tem integra√ß√£o direta com o Kubernetes/OpenShift, mas possui uma grande gama de op√ß√µes no que diz respeito de ferramentas de CI e CD.&lt;/p&gt;

&lt;p&gt;A implementa√ß√£o que vou demonstrar usar√° o &lt;a href=&#34;https://medium.com/@BuddyWorks&#34;&gt;Buddy&lt;/a&gt;, mas pode ser replicada para qualquer outro CI, com dificuldade semelhante. Para o registro de imagens irei usar o &lt;a href=&#34;http://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; e novamente o OpenShift da &lt;a href=&#34;https://medium.com/@getupcloud&#34;&gt;Getup Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sobre uma introdu√ß√£o ao Kubernetes/OpenShift pode ver aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lucassabreu.net.br/post/um-ambiente-simples-usando-kubernetes-e-openshift-next-gen-parte-1/&#34;&gt;&lt;strong&gt;Um ambiente simples usando Kubernetes e OpenShift Next Gen‚Ää‚Äî‚ÄäParte 1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O cliente de linha de comando do OpenShift pode ser baixado em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/openshift/origin/releases&#34;&gt;&lt;strong&gt;openshift/origin&lt;/strong&gt; origin - Enterprise Kubernetes for Developers&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;O que queremos montar √© um ambiente por branch/PR que deve ser facilmente criado e destru√≠do. Para demonstrar criei um reposit√≥rio no GitHub com uma aplica√ß√£o bem simples que apenas retorna uma p√°gina est√°tica, mas √© o suficiente para o objetivo.&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/helloworld.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;retorno do servi√ßo helloworld&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;E configurei o Buddy para construir uma imagem com base nesse reposit√≥rio e publicar ela como &lt;a href=&#34;https://hub.docker.com/r/lucassabreu/k8s-pr-envs/&#34;&gt;lucassabreu/k8s-pr-envs&lt;/a&gt; no Docker Hub.&lt;/p&gt;

&lt;p&gt;Nesse momento o arquivo &lt;code&gt;buddy.yml&lt;/code&gt; esta assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Docker&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;image&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;DOCKERFILE&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;login&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_USER}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_PASSWORD}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;dockerfile_path&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Dockerfile&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;repository&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;buddy.yml&lt;/p&gt;

&lt;p&gt;O fonte nesse momento pode ser visto em:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v1&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v1&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Nesse primeiro momento n√£o possu√≠mos nenhum processo de deploy, seja de teste, produ√ß√£o ou por branch.&lt;/p&gt;

&lt;p&gt;Ent√£o vamos adicionar um processo de deploy no OpenShift para o ambiente de produ√ß√£o e testes, sendo que o ambiente de testes √© atualizado automaticamente para os commits na master e o de produ√ß√£o apenas quando um usu√°rio disparar o deploy via interface web do Buddy (&lt;a href=&#34;http://app.buddy.works/&#34;&gt;http://app.buddy.works/&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Precisamos preparar o OpenShift para montar esse processo, primeiramente criamos um &lt;strong&gt;Namespace&lt;/strong&gt;. A forma como criamos um varia de vendor para vendor, no caso do OpenShift da &lt;a href=&#34;https://medium.com/@getupcloud&#34;&gt;Getup Cloud&lt;/a&gt;, basta ir em &lt;a href=&#34;https://portal.getupcloud.com/projects&#34;&gt;https://portal.getupcloud.com/projects&lt;/a&gt; e criar um novo projeto, o nome do projeto ser√° o &lt;strong&gt;Namespace.&lt;/strong&gt;&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/getup-dashboard.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Tendo um &lt;strong&gt;Namespace&lt;/strong&gt; precisamos de uma forma do Buddy se autenticar contra o OpenShift, para isso podemos criar um ServiceAccount e usar o &lt;strong&gt;Token&lt;/strong&gt; do mesmo para isso. O script abaixo mostra como criar uma ServiceAccount e resgatar o &lt;strong&gt;Token&lt;/strong&gt; usando o CLI do OpenShift:&lt;/p&gt;

&lt;pre&gt;
&lt;b&gt;$ oc login https://api.getupcloud.com:443&lt;/b&gt;
Authentication required for https://api.getupcloud.com:443 ...
Username: lucas.s.abreu@gmail.com
Password:
Login successful.
...

&lt;b&gt;$ oc project github-k8s-pr-envs #usar o seu projeto&lt;/b&gt;
Now using project &#34;github-k8s-pr-envs&#34; on server ...

&lt;b&gt;$ oc create serviceaccount github&lt;/b&gt;
serviceaccount &#34;github&#34; created

&lt;b&gt;$ oc policy add-role-to-user admin \
    system:serviceaccount:github-k8s-pr-envs:github&lt;/b&gt;

&lt;b&gt;$ oc describe serviceaccount github&lt;/b&gt;
Name:  github
Namespace: github-k8s-pr-envs
Labels:  &lt;none&gt;

Image pull secrets: github-dockercfg-vat7r

Mountable secrets:  github-token-d3u3t
                    github-dockercfg-vat7r

Tokens:             github-token-2pimz
                    github-token-d3u3t

&lt;b&gt;$ oc describe secret github-token-d3u3t&lt;/b&gt;
Name:  github-token-d3u3t
Namespace: github-k8s-pr-envs
Labels:  &lt;none&gt;
Annotations: kubernetes.io/service-account.name=github
  kubernetes.io/service-account.uid=zzz

Type: kubernetes.io/service-account-token

Data
====
ca.crt:  1066 bytes
namespace: 18 bytes
service-ca.crt: 2182 bytes
token:  &lt;i&gt;token-do-openshift-que-estou-ocultando&lt;/i&gt;
&lt;/pre&gt;

&lt;p&gt;Agora podemos informar no Buddy algumas vari√°veis para ele disponibilizar para n√≥s depois. Meu painel ficou como abaixo:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/buddy-envs.png&#34;  /&gt;
    
  
  
  &lt;figcaption&gt;
    &lt;header&gt;&lt;b&gt;buddy environments&lt;/b&gt;&lt;/header&gt;
    
  &lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;A URL da API e o dom√≠nio que o OpenShift ir√° utilizar tamb√©m dependem do seu vendor, no meu caso a API est√° em &lt;code&gt;https://api.getupcould.com:443&lt;/code&gt; e o dom√≠nio base √© &lt;code&gt;getup.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora podemos criar os novos pipelines no Buddy. No &lt;code&gt;buddy.yml&lt;/code&gt; as linhas abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Staging&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Master&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Staging&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=staging&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Production&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;MANUAL&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Master&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Production&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.to_revision.revision}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=production&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;buddy.yml (v2)&lt;/p&gt;

&lt;p&gt;Basicamente criei duas novas pipelines, uma chamada &lt;code&gt;Deploy Staging&lt;/code&gt; e outra &lt;code&gt;Deploy Production&lt;/code&gt; as √∫nicas diferen√ßas entre elas √© que a &lt;code&gt;Deploy Staging&lt;/code&gt; √© autom√°tica para todo o commit na master e usa &lt;code&gt;ENV=staging&lt;/code&gt; para indicar o ambiente; e &lt;code&gt;Deploy Production&lt;/code&gt; √© manual e usa &lt;code&gt;ENV=production&lt;/code&gt;. Tamb√©m criei vari√°veis para injetar os valores que informamos antes no Buddy e uma extra &lt;code&gt;COMMIT&lt;/code&gt; para que ele consiga identificar qual imagem deve usar.&lt;/p&gt;

&lt;p&gt;Essas duas pipelines basicamente chamam o script abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Connecting to OpenShift...&amp;quot;&lt;/span&gt;
oc login &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_API_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; --token &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
oc project &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Removing old application...&amp;quot;&lt;/span&gt;
oc delete all -l &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;app=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_DOMAIN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;.&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_DOMAIN&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Deploying application...&amp;quot;&lt;/span&gt;
sed &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__ENV__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__IMAGE_TAG__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$IMAGE_TAG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    s|__HOSTNAME__|&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;|;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    &amp;quot;&lt;/span&gt; k8s/full.yml &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; oc apply -f -

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Enviroment &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployed to: http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/deploy&lt;/p&gt;

&lt;p&gt;Este script basicamente se autentica contra a API do OpenShift usando o Token que criamos antes, destr√≥i a aplica√ß√£o antiga e executa o deploy
de uma nova.&lt;/p&gt;

&lt;p&gt;Para poder identificar quais os componentes de cada ambiente estou marcando eles com a label &lt;code&gt;app=$ENV&lt;/code&gt;, dessa forma todos os componentes do ambiente &lt;code&gt;staging&lt;/code&gt; est√£o marcados com &lt;code&gt;app=staging&lt;/code&gt; e fica f√°cil elimin√°-los e identific√°-los.&lt;/p&gt;

&lt;p&gt;√â importante ressaltar que estou usando uma imagem customizada para rodar esses comandos (&lt;code&gt;lucassabreu/openshift-k8s-cli&lt;/code&gt;) que basicamente √© um &lt;code&gt;ubuntu&lt;/code&gt; com o &lt;code&gt;oc&lt;/code&gt; instalado dentro dela.&lt;/p&gt;

&lt;p&gt;Tamb√©m estou usando um truque de &amp;ldquo;&lt;em&gt;templating&lt;/em&gt;&amp;rdquo; com o YAML que define os ambientes para poder inserir as vari√°veis de cada ambiente nele. Existem outras ferramentas mais avan√ßadas como o &lt;a href=&#34;https://github.com/kubernetes/helm&#34;&gt;Helm&lt;/a&gt;, mas para o meu exemplo templating com &lt;code&gt;sed&lt;/code&gt; √© o suficiente.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Deployment&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-dpl-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-container&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__IMAGE_TAG__&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Always&lt;/span&gt;
        &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;web-port&lt;/span&gt;
          &lt;span style=&#34;color: #ae81ff&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;targetPort&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;web-port&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TCP&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-pod&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Route&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__ENV__&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;__HOSTNAME__&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Service&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hw-src-__ENV__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;k8s/full.yml&lt;/p&gt;

&lt;p&gt;Agora toda vez que √© feito commit na master o ambiente de &lt;em&gt;staging&lt;/em&gt; √© automaticamente atualizado, e ficou bem simples atualizar o ambiente &lt;em&gt;production&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Fonte at√© agora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v2&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v2&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Agora que temos um processo de &lt;em&gt;build&lt;/em&gt; e um de &lt;em&gt;deploy automatizado&lt;/em&gt;, vamos adicionar a fun√ß√£o de deploy por branch.&lt;/p&gt;

&lt;p&gt;Basicamente precisamos de duas novas etapas no nosso CI, uma para subir o ambiente para uma branch e outro para destruir esse ambiente.&lt;/p&gt;

&lt;p&gt;Primeiro vamos preparar o deploy por branch, para isso adicionei as seguintes linhas do &lt;code&gt;buddy.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Review&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ON_EVERY_PUSH&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;((?!master).*)&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Build&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Docker&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;image&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;DOCKERFILE&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;login&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_USER}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${DOCKER_HUB_PASSWORD}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;dockerfile_path&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Dockerfile&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;repository&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Deploy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;By&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Branch&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;TAG=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;GITHUB_TOKEN=&amp;quot;${GITHUB_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;LOG_URL=&amp;quot;${execution.html_url}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_DOMAIN=&amp;quot;${OPENSHIFT_DOMAIN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No novo pipeline &lt;em&gt;Review&lt;/em&gt; temos um &lt;em&gt;build&lt;/em&gt; da imagem e um deploy de um ambiente para a branch em quest√£o, para uma rota pr√≥pria.&lt;/p&gt;

&lt;p&gt;Eu acabei juntando essas duas a√ß√µes, pois o build que roda na master vai versionando as imagens por commit, que √© uma pr√°tica comum e que ajudaria a fazer o deploy para produ√ß√£o mais simples, por√©m branchs de desenvolvimento tendem a ser mais ca√≥ticas e iriam poluir muito o registro de imagens (se usar o do AWS seria um custo maior tamb√©m), ent√£o preferi manter uma imagem por branch, at√© para n√£o confundir tamb√©m.&lt;/p&gt;

&lt;p&gt;Se eu criar uma nova branch nesse momento, o Buddy automaticamente ir√° montar uma imagem para ela e inseri-la no OpenShift, se o nome da branch for &lt;code&gt;a-change&lt;/code&gt; o nome do ambiente &lt;a href=&#34;http://github-k8s-pr-envs-a-change.getup.io&#34;&gt;http://github-k8s-pr-envs-a-change.getup.io&lt;/a&gt; (talvez ainda esteja acess√≠vel).&lt;/p&gt;

&lt;p&gt;Eu sei disso porque eu escrevi o script, eu poderia documentar isso no projeto para todos saberem como descobrir as URLs corretas, mas √© mais do que natural esperar erros por esse caminho, um &amp;ldquo;o&amp;rdquo; que vira &amp;ldquo;a&amp;rdquo; na hora de digitar, um nome de branch estranho, etc.&lt;/p&gt;

&lt;p&gt;Dessa forma fica dif√≠cil para a equipe de QA acessar aos ambientes por branch toda a vez correndo o risco de errar. Ent√£o fiz algumas altera√ß√µes no &lt;code&gt;k8s/deploy&lt;/code&gt; para utilizar a &lt;a href=&#34;https://developer.github.com/v3/repos/deployments/&#34;&gt;API de Deployments do GitHub&lt;/a&gt; para registrar as URLs diretamente nos commits.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; ! -z &lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;staging&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Registering &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployment...&amp;quot;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;ID_DEPLOYMENT&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; create &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;.id&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;RETURN&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; status &lt;span style=&#34;color: #f8f8f2&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ID_DEPLOYMENT&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; success &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$LOG_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$RETURN&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;.message&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; !&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;null&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$RETURN&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Enviroment &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; deployed to: http://&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&#34;code-legend&#34;&gt;deploy.sh&lt;/p&gt;

&lt;p&gt;Com isso fa√ßo algumas chamadas a API do GitHub usando o &lt;code&gt;k8s/github-deployment&lt;/code&gt; (que √© basicamente um facilitador para a API) e consigo registrar o deploy no GitHub.&lt;/p&gt;

&lt;p&gt;O Pull Request da branch &lt;code&gt;a-change&lt;/code&gt; fica assim:&lt;/p&gt;


&lt;figure &gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/github-deployments.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;Nesse bot√£o &amp;ldquo;View deployment&amp;rdquo; est√° o link para a rota que criamos no deploy, e dessa forma fica extremamente f√°cil para a equipe de QA acessar os ambientes.&lt;/p&gt;

&lt;p&gt;Fontes at√© agora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v3.1&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v3.1&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ainda fica faltando uma √∫ltima atividade por realizar, que √© destruir o ambiente da branch quando os Testers n√£o mais precisarem deles.&lt;/p&gt;

&lt;p&gt;Ent√£o vamos adicionar uma nova pipeline no &lt;code&gt;buddy.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pipeline&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Close&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Review&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;trigger_mode&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;MANUAL&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;ref_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;((?!master).*)&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Destroy&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Branch&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Environment&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;BUILD&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/openshift-k8s-cli&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;docker_image_tag&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;execute_commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;ENV=&amp;quot;${execution.branch.name}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;GITHUB_TOKEN=&amp;quot;${GITHUB_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_NAMESPACE=&amp;quot;${OPENSHIFT_NAMESPACE}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_API_URL=&amp;quot;${OPENSHIFT_API_URL}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;OPENSHIFT_TOKEN=&amp;quot;${OPENSHIFT_TOKEN}&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #ae81ff&#34;&gt;./k8s/destroy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nesse pipeline manual basicamente chamamos o script &lt;code&gt;k8s/destroy&lt;/code&gt; (que esta abaixo) que simplesmente destr√≥i o ambiente inativa ele no GitHub.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Connecting to OpenShift...&amp;quot;&lt;/span&gt;
oc login &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_API_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; --token &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
oc project &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$OPENSHIFT_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;gt;&amp;gt; Removing old application...&amp;quot;&lt;/span&gt;
oc delete all -l &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;app=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;

k8s/github-deployment &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;lucassabreu/k8s-pr-envs&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; inactive &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ENV&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Agora podemos chamar ele para eliminar os ambientes de branch em aberto.&lt;/p&gt;

&lt;p&gt;Fontes at√© o momento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/k8s-pr-envs/tree/v4&#34;&gt;&lt;strong&gt;lucassabreu/k8s-pr-envs&lt;/strong&gt; v4&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Um comportamento que ainda n√£o conseguimos reproduzir usando o Buddy e GitHub √© destruir os ambientes quando o Pull Request √© finalizado.&lt;/p&gt;

&lt;p&gt;Para resolver esse problema podemos adicionar um webhook no GitHub e dispararmos o pipeline atrav√©s desse webhook. Isso pode ser feito de v√°rias formas, usando Lambda Functions ou um endpoint para esse fim.&lt;/p&gt;

&lt;p&gt;No caso criei um novo Pod com um cont√™iner que criei (&lt;code&gt;lucassabreu/buddy-works-pullrequest-webhook&lt;/code&gt;) e associei ela no meu projeto no GitHub.&lt;/p&gt;


&lt;figure class=&#34;big&#34;&gt;
  
    
      &lt;img class=&#34;lazyload&#34; data-src=&#34;/post/ambientes-por-branch-com-openshift-next-gen-usando-github/webhooks.png&#34;  /&gt;
    
  
  
&lt;/figure&gt;
&lt;style media=&#34;screen&#34;&gt;
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
&lt;/style&gt;


&lt;p&gt;E pronto tenho um processo completo, mesmo que se esque√ßam de derrubar o ambiente no momento que o merge acontecer automaticamente o ambiente
ser√° destru√≠do.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Abaixo esta o meu &amp;ldquo;webhook&amp;rdquo; caso opte por um caminho semelhante e poder
ter uma base de como √© a chamada.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lucassabreu/buddy-works-pullrequest-webhook&#34;&gt;&lt;strong&gt;lucassabreu/buddy-works-pullrequest-webhook&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Foi mais complexo implementar a integra√ß√£o do OpenShift com o GitHub, mas ainda sim temos um grande ecossistema de integra√ß√µes que nos permitem contornar essa quest√£o, e o resultado continua sendo o esperado.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>